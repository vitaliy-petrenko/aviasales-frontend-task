{"version":3,"sources":["helpers/bem.ts","components/ui/forms/Button/Button.tsx","pages/DoNotTouchThis/DoNotTouchThis.tsx","components/PlaneLogo/PlaneLogo.tsx","helpers/misc.ts","api/config.ts","helpers/fetch.ts","normalizers/ticketNormalizers.ts","store/findTickets/reducers.ts","api/ticketApi.ts","store/actionTypes.ts","store/findTickets/actions.ts","store/findTickets/selectors.ts","pages/FindTickets/PlaneLogo/PlaneLogoContainer.tsx","components/ui/Layout/Layout.tsx","assets/icons/check.svg","components/ui/forms/Checkbox/Checkbox.tsx","components/ui/forms/FiltersSection/FiltersSection.tsx","pages/FindTickets/Sidebar/Sidebar.tsx","pages/FindTickets/Sidebar/SidebarContainer.ts","components/ui/common/Price/Price.tsx","store/common/selectors.ts","components/ui/common/Price/PriceContainer.tsx","helpers/formatters.ts","components/ui/common/Duration/Duration.tsx","components/Ticket/Ticket.tsx","components/ui/common/FadeIn/FadeIn.tsx","pages/FindTickets/TicketsList/TicketsList.tsx","components/ui/common/Error/Error.tsx","hoc/withData.tsx","pages/FindTickets/TicketsList/TicketListContainer.tsx","components/ui/forms/ButtonGroup/ButtonGroup.tsx","pages/FindTickets/SortTabs/SortTabs.tsx","pages/FindTickets/SortTabs/SortTabsContainer.ts","pages/FindTickets/FindTickets.tsx","App.tsx","store/common/reducers.ts","store/common/index.ts","store/findTickets/index.ts","store/rootReducer.ts","store/index.ts","translations/ru-RU.ts","services/translation.ts","services/moment.ts","initialize.ts","serviceWorker.ts","index.tsx"],"names":["makeBEMModifier","base","modifier","getButtonClassName","type","size","isLoading","block","isDisabled","modifiers","push","baseClass","isActive","result","length","makeModifier","bind","map","join","makeBemClassNames","Button","div","a","text","children","props","className","Tag","WTF","to","PlaneLogo","animated","animate","scale","rotate","transition","duration","loop","Infinity","x","y","orderedArray","count","Array","from","keys","config","gateWays","searchKey","tickets","fetchJSON","path","fetch","response","ok","json","status","Promise","reject","ETicketsSortBy","normalizeTicket","ticket","segments","rest","id","v4","normalizeTicketSegment","segment","KEY_PATH","TICKETS_PATH","fetchTicketsSearchId","searchId","withInterval","fn","delay","run","setTimeout","pollTickets","process","stop","rawTickets","normalized","console","warn","ACTION_TYPES","FIND_TICKETS","CLEAR","TICKETS","ADD","STATUSES","IS_FETCHING_ALL","IS_FETCHING","IS_ERROR","FILTERS","TRANSFERS","SET_SELECTED_OPTIONS","SET_AVAILABLE_OPTIONS","SORT_BY","setFetchingLoadingStatus","createAction","payload","setFetchingLoadingAllStatus","setFetchingErrorStatus","addTickets","clearFindTickets","selectSortBy","sortBy","setAvailableTransfersOptions","options","setSelectedTransfersOptions","fetchTickets","dispatch","firstSegmentPolled","lastAvailableOptions","newAvailableOptions","availableOptions","Set","i","forEach","stops","add","call","sort","getAvailableOptions","array1","array2","arraysAreSame","set","mergeArrays","catch","finally","INITIAL_STATE","statuses","isFetching","isError","isFetchingAll","price","filters","transfers","available","selected","pagination","offset","limit","createReducer","state","action","getFetchingStatuses","findTickets","getFilters","getSortBy","accumulateDuration","reduce","accumulate","getTicketsListSorted","createSelector","slice","b","getFinalTicketList","isAllSelected","isNothingSelected","filtered","allStops","getTransfersCounts","stopCount","includes","connect","Layout","Sidebar","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","title","width","height","viewBox","fill","ref","ForwardRef","forwardRef","Checkbox","onChange","e","checked","FiltersSection","CheckboxFilter","option","onToggle","useTranslation","t","item","array","filter","bindActionCreators","Price","value","currency","formatted","toLocaleString","format","symbol","name","getCurrency","common","getLocale","locale","formatFromTo","arr","formatDurationFromMinutes","minutes","restMinutes","hours","restHours","days","formatDurationInHours","Duration","SegmentItem","label","TLoading","TicketLoading","Ticket","carrierCode","alt","src","carrier","date","destination","origin","moment","getRangeFromDateAndDuration","FadeIn","additional","initialX","opacity","initial","MemoizedTicket","memo","Loading","TicketsNotFound","TicketsList","list","notFound","Error","Reload","reload","onClick","withData","Component","reset","childProps","React","ButtonGroup","SortTabs","sortByPriceIsActive","FindTickets","App","exact","combineReducers","reducers","middlewares","thunk","enhancer","applyMiddleware","createStore","tabs","all","labelZero","label_0","label_1","label_2","labels","time","daysShort","hoursShort","minutesShort","commonMessages","error","i18n","use","initReactI18next","init","resources","translation","ruTranslation","lng","fallbackLng","interpolation","escapeValue","translationService","momentService","setLocale","initLocale","Boolean","window","location","hostname","match","render","ReactDOM","store","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea44ef36.chunk.js","sourcesContent":["export const makeBEMModifier = (base: string, modifier: string): string =>\n  `${base}--${modifier}`\n\nexport interface IBEMProps {\n  isLoading?: boolean\n  isDisabled?: boolean\n  isActive?: boolean\n  modifiers?: string[]\n  mix?: string\n}\n\nexport const makeBemClassNames = (\n  baseClass: string,\n  { isLoading, isActive, isDisabled, modifiers = [] }: IBEMProps\n): string => {\n  const result = [baseClass]\n\n  if (isLoading) result.push('is-loading')\n  if (isDisabled) result.push('is-disabled')\n  if (isActive) result.push('is-active')\n\n  if (baseClass && modifiers.length) {\n    const makeModifier = makeBEMModifier.bind(null, baseClass)\n\n    result.push(...modifiers.map(makeModifier))\n  }\n\n  return result.join(' ')\n}\n","import React from 'react'\nimport './Button.scss'\nimport { makeBemClassNames } from '../../../../helpers/bem'\n\ninterface ButtonClassProps {\n  type?: string\n  isLoading?: boolean\n  isDisabled?: boolean\n  size?: string\n  block?: boolean\n}\n\ninterface IProps extends ButtonClassProps {\n  text?: string\n  div?: boolean\n  a?: boolean\n  href?: string\n  target?: string\n  onClick?: (e: React.MouseEvent) => any\n}\n\nconst BASE_CLASS_NAME = 'btn'\n\nconst Button: React.FC<IProps> =\n  ({ div, a, type = 'primary', size, isLoading, isDisabled, block, text, children, ...props }) => {\n    const\n      className = getButtonClassName({ type, size, isLoading, isDisabled, block }),\n      Tag = div ? 'div' : a ? 'a' : 'button'\n\n    return (\n      <Tag className={className} {...props}>\n        {text}\n        {children}\n      </Tag>\n    )\n  }\n\nconst getButtonClassName = ({ type, size, isLoading, block, isDisabled }: ButtonClassProps) => {\n  const modifiers = []\n\n  if (type) modifiers.push(type)\n  if (size) modifiers.push(size)\n  if (block) modifiers.push('block')\n\n  return makeBemClassNames(BASE_CLASS_NAME, { isLoading, isDisabled, modifiers },)\n}\n\nexport default Button\n","import React from 'react'\nimport './DoNotTouchThis.scss'\nimport Button from '../../components/ui/forms/Button'\nimport { Link } from 'react-router-dom'\n\nconst WTF: React.FC = () => (\n  <div className='do-not-touch-this'>\n    <div className='do-not-touch__d'></div>\n    <div className='do-not-touch__o'></div>\n    <div className='do-not-touch__n'></div>\n    <div className='do-not-touch__o'></div>\n    <div className='do-not-touch__t'></div>\n    <div className='do-not-touch__t'></div>\n    <div className='do-not-touch__o'></div>\n    <div className='do-not-touch__u'>\n      <Link to='/' className='yo-btn-wrap'>\n        <Button size='lg' div type='secondary'>Уйти</Button>\n      </Link>\n    </div>\n    <div className='do-not-touch__c'></div>\n    <div className='do-not-touch__h'></div>\n    <div className='do-not-touch__t'></div>\n    <div className='do-not-touch__h'></div>\n    <div className='do-not-touch__i'></div>\n    <div className='do-not-touch__s'></div>\n  </div>\n)\n\nexport default WTF\n","import React from 'react'\nimport './PlaneLogo.scss'\nimport { motion } from 'framer-motion'\n\nexport interface IProps {\n  animated: boolean\n}\n\nconst PlaneLogo: React.FC<IProps> = ({ animated = false }) => {\n  return (\n    <div className='plane-logo'>\n      <motion.div\n        className='plane-logo__earth'\n        animate={\n          animated ? {\n            scale: [1, 1.1, 1, 1.1, 1], rotate: [0, 180],\n          } : {\n            scale: 1, rotate: 0\n          }\n        }\n        transition={\n          animated ? {\n            duration: 2, loop: Infinity\n          } : {\n            duration: .5, loop: 0\n          }\n        }\n      />\n\n      <div className='plane-logo__plane-wrap'>\n        <motion.div\n          className='plane-logo__plane'\n          animate={\n            animated ? {\n              scale: [1, .8, .8, 1], rotate: [0, -1, 0, -1, 0], x: [0, -1, 0, 1, 0], y: [0, 1, 0, -1, 0]\n            } : {\n              scale: 1, rotate: 0, x: 0, y: 0\n            }\n          }\n          transition={\n            animated ? {\n              duration: 4, loop: Infinity\n            } : {\n              duration: .5, loop: 0\n            }\n          }\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default PlaneLogo\n\n","export const orderedArray = (count: number): number[] => Array.from(Array(count).keys())\n\nexport const toggleInArray = <T>(array: T[], item: T): T[] => {\n  return array.includes(item) ? array.filter(a => item !== a) : [...array, item]\n}\n\nexport const mergeArrays = <T>(array1: T[], array2: T[]): T[] => {\n  const set = new Set<T>(array1)\n\n  array2.forEach(set.add.bind(set))\n\n  return Array.from(set)\n}\n\nexport const arraysAreSame = <T>(array1: T[], array2: T[]): boolean => {\n  if (array1.length !== array2.length) return false\n\n  for (let i = 0; i < array1.length; i++) {\n    if (array1[i] !== array2[i]) return false\n  }\n\n  return true\n}\n","const config = {\n  base: 'https://front-test.beta.aviasales.ru',\n\n  gateWays: {\n    searchKey: '/search',\n    tickets: '/tickets',\n  }\n}\n\nexport default config\n","export const fetchJSON = async (path: string) => {\n  const response = await fetch(path)\n\n  if (response.ok) {\n    return response.json()\n  } else {\n    const\n      status = response.status,\n      text = await response.text()\n\n    return Promise.reject(`${status}: ${text}`)\n  }\n}\n","import { v4 } from 'uuid'\n\nexport const normalizeTicket = (ticket: IRawTicket): ITicket => {\n  const { segments, ...rest } = ticket\n\n  return {\n    id: v4(),\n    segments: ticket.segments.map(normalizeTicketSegment),\n    ...rest\n  }\n}\n\nexport const normalizeTicketSegment = (segment: IRawTicketSegment): ITicketSegment => ({\n  id: v4(),\n  ...segment,\n})\n","import { createReducer } from '@reduxjs/toolkit'\nimport { orderedArray } from '../../helpers/misc'\nimport {\n  addTickets,\n  clearFindTickets,\n  selectSortBy,\n  setAvailableTransfersOptions,\n  setFetchingLoadingAllStatus,\n  setFetchingLoadingStatus,\n  setSelectedTransfersOptions\n} from './actions'\n\nexport enum ETicketsSortBy {price, duration}\n\nconst INITIAL_STATE: IFindTicketsState = {\n  statuses: {\n    isFetching: false,\n    isError: false,\n    isFetchingAll: false,\n  },\n\n  tickets: [],\n\n  sortBy: ETicketsSortBy.price,\n\n  filters: {\n    transfers: {\n      available: orderedArray(2),\n      selected: orderedArray(2),\n    }\n  },\n\n  pagination: {\n    offset: 0,\n    limit: 5,\n  },\n}\n\nexport const transfers = createReducer(INITIAL_STATE.filters.transfers, {\n  [setSelectedTransfersOptions.type]: (state, action) => ({\n    ...state,\n    selected: action.payload,\n  }),\n\n  [setAvailableTransfersOptions.type]: (state, action) => {\n    const\n      { selected, available } = state,\n      isAllOptionsSelected = selected.length === available.length\n\n    return {\n      selected: isAllOptionsSelected ? [...action.payload] : selected,\n      available: action.payload,\n    }\n  },\n\n  [clearFindTickets.type]: () => ({\n    ...INITIAL_STATE.filters.transfers\n  })\n})\n\nexport const sortBy = createReducer(INITIAL_STATE.sortBy, {\n  [selectSortBy.type]: (state, action) => {\n    return action.payload\n  },\n  [clearFindTickets.type]: () => INITIAL_STATE.sortBy\n})\n\nexport const tickets = createReducer(INITIAL_STATE.tickets, {\n  [addTickets.type]: (state, action) => [...state, ...action.payload],\n\n  [clearFindTickets.type]: (state, action) => [...INITIAL_STATE.tickets]\n})\n\nexport const statuses = createReducer(INITIAL_STATE.statuses, {\n  [setFetchingLoadingAllStatus.type]: (state, action) => ({\n    ...state,\n    isFetchingAll: action.payload,\n  }),\n  [setFetchingLoadingStatus.type]: (state, action) => ({\n    ...state,\n    isError: action.payload,\n  }),\n  [setFetchingLoadingStatus.type]: (state, action) => ({\n    ...state,\n    isFetching: action.payload,\n  }),\n  [clearFindTickets.type]: () => ({\n    ...INITIAL_STATE.statuses\n  })\n})\n\nexport const pagination = createReducer(INITIAL_STATE.pagination, {\n  [clearFindTickets.type]: () => ({\n    ...INITIAL_STATE.pagination\n  })\n})\n","import config from './config'\nimport { fetchJSON } from '../helpers/fetch'\nimport { normalizeTicket } from '../normalizers/ticketNormalizers'\n\nconst\n  KEY_PATH = config.base + config.gateWays.searchKey,\n  TICKETS_PATH = config.base + config.gateWays.tickets\n\nconst fetchTicketsSearchId = async (): Promise<string> => {\n  const { searchId } = await fetchJSON(KEY_PATH)\n\n  return searchId\n}\n\nconst withInterval = (fn: () => boolean, delay: number) => {\n  const run = () => {\n    setTimeout(() => {\n      const result = fn()\n\n      if (!result) {\n        run()\n      }\n    }, delay)\n  }\n\n  run()\n}\n\nexport const pollTickets = async (process: (tickets: ITicket[]) => any) => {\n  let\n    stop = false,\n    rawTickets: IRawTicket[] = []\n\n  const\n    searchId = await fetchTicketsSearchId(),\n    path = `${TICKETS_PATH}?searchId=${searchId}`\n\n  withInterval(() => {\n    if (rawTickets.length) {\n      const normalized = rawTickets.map(normalizeTicket)\n\n      process(normalized)\n      rawTickets = []\n    }\n\n    return stop\n  }, 500)\n\n  while (!stop) try {\n    const result = await fetchJSON(path)\n\n    stop = result.stop\n\n    rawTickets.push(...result.tickets)\n  } catch (error) {\n    console.warn(error)\n  }\n}\n\nexport const getImage = (carrierCode: string) => `//pics.avs.io/99/36/${carrierCode}.png`\n","const FIND_TICKETS_TYPES = {\n  CLEAR: 'FIND_TICKETS.TICKETS.CLEAR',\n\n  /** tickets */\n  TICKETS: {\n    ADD: 'FIND_TICKETS.TICKETS.ADD',\n  },\n\n  /** statuses */\n  STATUSES: {\n    IS_FETCHING_ALL: 'FIND_TICKETS.STATUSES.IS_FETCHING_ALL',\n    IS_FETCHING: 'FIND_TICKETS.STATUSES.IS_FETCHING',\n    IS_ERROR: 'FIND_TICKETS.STATUSES.IS_ERROR',\n  },\n\n  /** filters */\n  FILTERS: {\n    TRANSFERS: {\n      SET_SELECTED_OPTIONS: 'FIND_TICKETS.FILTERS.TRANSFERS.SET_SELECTED_OPTIONS',\n      SET_AVAILABLE_OPTIONS: 'FIND_TICKETS.FILTERS.TRANSFERS.SET_AVAILABLE_OPTIONS'\n    }\n  },\n\n  /** sort */\n  SORT_BY: 'FIND_TICKETS.SORT_BY',\n}\n\nconst ACTION_TYPES = {\n  FIND_TICKETS: FIND_TICKETS_TYPES\n}\n\nexport default ACTION_TYPES\n","import { Dispatch } from 'react'\nimport { createAction } from '@reduxjs/toolkit'\nimport { pollTickets } from '../../api/ticketApi'\nimport ACTION_TYPES from '../actionTypes'\nimport { arraysAreSame, mergeArrays } from '../../helpers/misc'\n\nexport const setFetchingLoadingStatus = createAction(\n  ACTION_TYPES.FIND_TICKETS.STATUSES.IS_FETCHING,\n  (status: boolean) => ({\n    payload: status,\n  })\n)\n\nexport const setFetchingLoadingAllStatus = createAction(\n  ACTION_TYPES.FIND_TICKETS.STATUSES.IS_FETCHING_ALL,\n  (status: boolean) => ({\n    payload: status,\n  })\n)\n\nexport const setFetchingErrorStatus = createAction(\n  ACTION_TYPES.FIND_TICKETS.STATUSES.IS_ERROR,\n  (status: boolean) => ({\n    payload: status,\n  })\n)\n\nexport const addTickets = createAction(\n  ACTION_TYPES.FIND_TICKETS.TICKETS.ADD,\n  (tickets: ITicket[]) => ({\n    payload: tickets,\n  })\n)\n\nexport const clearFindTickets = createAction(ACTION_TYPES.FIND_TICKETS.CLEAR)\n\nexport const selectSortBy = createAction(\n  ACTION_TYPES.FIND_TICKETS.SORT_BY,\n  (sortBy: TTicketsSortByState) => ({\n    payload: sortBy,\n  })\n)\n\nexport const setAvailableTransfersOptions = createAction(\n  ACTION_TYPES.FIND_TICKETS.FILTERS.TRANSFERS.SET_AVAILABLE_OPTIONS,\n  (options: number[]) => ({\n    payload: options,\n  })\n)\n\nexport const setSelectedTransfersOptions = createAction(\n  ACTION_TYPES.FIND_TICKETS.FILTERS.TRANSFERS.SET_SELECTED_OPTIONS,\n  (options: number[]) => ({\n    payload: options\n  })\n)\n\nconst getAvailableOptions = (tickets: ITicket[]): number[] => {\n  let availableOptions = new Set<number>()\n\n  for (let i = 0; i < tickets.length; i++) {\n    tickets[i].segments.forEach(({ stops }) => availableOptions.add.call(availableOptions, stops.length))\n  }\n\n  return Array.from(availableOptions).sort()\n}\n\nexport const fetchTickets = () => (dispatch: Dispatch<TAppAnyAction>) => {\n  let\n    firstSegmentPolled = false,\n    lastAvailableOptions: number[] = []\n\n  dispatch(setFetchingErrorStatus(false))\n  dispatch(setFetchingLoadingStatus(true))\n  dispatch(setFetchingLoadingAllStatus(true))\n\n  pollTickets(\n    tickets => {\n      dispatch(addTickets(tickets))\n\n      const newAvailableOptions = getAvailableOptions(tickets)\n\n      if (!arraysAreSame(lastAvailableOptions, newAvailableOptions)) {\n        lastAvailableOptions = mergeArrays(lastAvailableOptions, newAvailableOptions).sort()\n        dispatch(setAvailableTransfersOptions(lastAvailableOptions))\n      }\n\n      if (!firstSegmentPolled) {\n        dispatch(setFetchingLoadingStatus(false))\n        firstSegmentPolled = true\n      }\n    })\n    .catch(() => {\n      dispatch(setFetchingErrorStatus(true))\n    })\n    .finally(() => {\n      dispatch(setFetchingLoadingAllStatus(false))\n    })\n}\n","import { createSelector } from '@reduxjs/toolkit'\nimport { IState } from '../rootReducer'\nimport { ETicketsSortBy } from './reducers'\n\n/** simple selectors */\nexport const getFetchingStatuses = (state: IState): IFetchingStatuses => state.findTickets.statuses\nexport const getFilters = (state: IState): ITicketFiltersState => state.findTickets.filters\nexport const getSortBy = (state: IState): number => state.findTickets.sortBy\nexport const getPagination = (state: IState): IPagination => state.findTickets.pagination\nexport const getAllTicketsList = (state: IState): ITicket[] => state.findTickets.tickets\n\nconst accumulateDuration = (segments: ITicketSegment[]): number => {\n  return segments.reduce((accumulate, { duration }) => accumulate + duration, 0)\n}\n\n/** reselect */\nexport const getTicketsListSorted = createSelector<IState, ITicket[], TTicketsSortByState, ITicket[]>(\n  getAllTicketsList,\n  getSortBy,\n  (tickets, sortBy) => {\n    if (sortBy === ETicketsSortBy.duration) {\n      return tickets.slice().sort((a, b) => accumulateDuration(a.segments) - accumulateDuration(b.segments))\n    } else if (sortBy === ETicketsSortBy.price) {\n      return tickets.slice().sort((a, b) => a.price - b.price)\n    } else {\n      return tickets\n    }\n  }\n)\n\nexport const getFinalTicketList = createSelector<IState, ITicket[], ITicketFiltersState, IPagination, ITicket[]>(\n  getTicketsListSorted,\n  getFilters,\n  getPagination,\n  (tickets, { transfers }, { offset, limit }) => {\n    const\n      getTransfersCounts = (ticket: ITicket): number[] => ticket.segments.map(({ stops }) => stops.length),\n      isAllSelected = transfers.selected.length === transfers.available.length,\n      isNothingSelected = !transfers.selected.length,\n      filtered: ITicket[] = []\n\n    if (isAllSelected) return tickets.slice(offset, offset + limit)\n    if (isNothingSelected) return []\n\n    for (let i = 0; i < tickets.length && filtered.length < offset + limit; i++) {\n      const\n        ticket = tickets[i],\n        allStops = getTransfersCounts(ticket)\n\n      let count = 0\n\n      allStops.forEach(stopCount => transfers.selected.includes(stopCount) && count++)\n\n      if (count === allStops.length) filtered.push(ticket)\n    }\n\n    return filtered\n  })\n","import { connect } from 'react-redux'\nimport PlaneLogo, { IProps } from '../../../components/PlaneLogo/PlaneLogo'\nimport { IState } from '../../../store/rootReducer'\nimport { getFetchingStatuses } from '../../../store/findTickets/selectors'\n\ntype TStateProps = IProps;\n\nconst mapStateToProps = (state: IState): TStateProps => ({\n  animated: getFetchingStatuses(state).isFetchingAll,\n})\n\nexport default connect(mapStateToProps)(PlaneLogo)\n","import React from 'react'\nimport './Layout.scss'\n\ninterface IProps {\n  Sidebar?: React.ComponentType\n}\n\nconst Layout: React.FC<IProps> = ({ Sidebar, children }) => (\n  <div className='layout'>\n    {Sidebar && (\n      <div className='layout__sidebar'>\n        <Sidebar/>\n      </div>\n    )}\n\n    <div className='layout__main'>\n      {children}\n    </div>\n  </div>\n)\n\nexport default Layout\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M4.28571 8L0 4.16123L1.20857 3.0787L4.28571 5.82726L10.7914 0L12 1.09021L4.28571 8Z\"\n});\n\nvar SvgCheck = function SvgCheck(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 8,\n    viewBox: \"0 0 12 8\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgCheck, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/check.b73f59a3.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport { ReactComponent as ICheck } from '../../../../assets/icons/check.svg'\nimport './Checkbox.scss'\n\ninterface IProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  type?: string\n\n  onChange(value: boolean): void\n}\n\nconst Checkbox: React.FC<IProps> = ({ children, onChange, type = 'checkbox', ...rest }) => {\n  return (\n    <label className='checkbox'>\n      <input type={type} onChange={e => onChange(e.target.checked)} {...rest} />\n      <span className='checkbox__icon'><ICheck/></span>\n\n      <span className='checkbox__label'>\n        {children}\n      </span>\n    </label>\n  )\n}\n\nexport default Checkbox\n","import React from 'react'\nimport './FiltersSection.scss'\n\ninterface IProps {\n  title: string\n}\n\nconst FiltersSection: React.FC<IProps> = ({ title, children }) => (\n  <div className='filters-section'>\n    <div className='filters-section__title'>\n      {title}\n    </div>\n    <div className='filters-section__body'>\n      {children}\n    </div>\n  </div>\n)\n\nexport default FiltersSection\n","import React from 'react'\nimport Checkbox from '../../../components/ui/forms/Checkbox'\nimport FiltersSection from '../../../components/ui/forms/FiltersSection'\nimport { useTranslation } from 'react-i18next'\nimport { toggleInArray } from '../../../helpers/misc'\n\nexport interface IProps {\n  setSelectedTransfersOptions: (options: number[]) => TActionFilterTransfers,\n  filters: ITicketFiltersState\n}\n\nconst Sidebar: React.FC<IProps> = ({ setSelectedTransfersOptions, filters }) => {\n  const\n    [t] = useTranslation(),\n    { selected, available } = filters.transfers,\n    isAllSelected = available.length === selected.length,\n\n    onToggleAll = () => setSelectedTransfersOptions(selected.length && isAllSelected ? [] : [...available]),\n    onToggle = (option: number) => setSelectedTransfersOptions(toggleInArray(selected, option))\n\n  return (\n    <FiltersSection title='Количество пересадок'>\n      <Checkbox\n        checked={isAllSelected}\n        onChange={onToggleAll}\n      >\n        {t('findTickets.transfers.all')}\n      </Checkbox>\n\n      {\n        available.map(option => (\n          <CheckboxFilter\n            key={option}\n            option={option}\n            checked={selected.includes(option)}\n            onToggle={onToggle}\n          />\n        ))\n      }\n    </FiltersSection>\n  )\n}\n\ninterface IFilterCheckBoxProps {\n  option: number\n  checked: boolean\n\n  onToggle(value: number): void\n}\n\nconst CheckboxFilter: React.FC<IFilterCheckBoxProps> = ({ option, onToggle, checked }) => {\n  const\n    [t] = useTranslation(),\n    onChange = () => onToggle(option)\n\n  return (\n    <Checkbox\n      key={option}\n      checked={checked}\n      onChange={onChange}\n    >\n      {t(`findTickets.transfers.label${option === 0 ? 'Zero' : ''}`, { count: option })}\n    </Checkbox>\n  )\n}\n\nexport default Sidebar\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { IState } from '../../../store/rootReducer'\nimport { getFilters } from '../../../store/findTickets/selectors'\nimport { setSelectedTransfersOptions } from '../../../store/findTickets/actions'\nimport Sidebar, { IProps } from './Sidebar'\n\ntype TStateProps = Pick<IProps, 'filters'>;\ntype TDispatchProps = Pick<IProps, 'setSelectedTransfersOptions'>\n\nconst mapStateToProps = (state: IState): TStateProps => ({\n  filters: getFilters(state)\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IState, {}, TAppAnyAction>): TDispatchProps => ({\n  setSelectedTransfersOptions: bindActionCreators(setSelectedTransfersOptions, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar)\n","import React from 'react'\n\nexport interface IProps {\n  value: number\n  currency: TCurrency\n}\n\nconst format = (value: number): string => value.toLocaleString()\n\nconst Price: React.FC<IProps> = ({ value, currency }) => {\n  const\n    formatted = format(value),\n    symbol = currency.symbol\n\n  if (currency.name === 'USD') return (\n    <>{`${symbol}${formatted}`}</>\n  )\n\n  return (\n    <>{`${formatted} ${symbol}`}</>\n  )\n}\n\nexport default Price\n","import { IState } from '../rootReducer'\n\nexport const getCurrency = (state: IState): TCurrency => state.common.currency\nexport const getLocale = (state: IState): TLocale => state.common.locale\n","import { connect } from 'react-redux'\nimport Price from './Price'\nimport { getCurrency } from '../../../../store/common/selectors'\nimport { IState } from '../../../../store/rootReducer'\n\nconst mapStateToProps = (state: IState) => ({\n  currency: getCurrency(state)\n})\n\nexport default connect(mapStateToProps)(Price)\n","export const formatFromTo = (arr: Array<string | number>): string => arr.join(' - ')\n\nexport type TDurationParsed = {\n  days?: number\n  hours?: number\n  minutes?: number\n}\n\nexport const formatDurationInHours = (hours: number): TDurationParsed => {\n  const\n    restHours = hours % 24,\n    days = (hours - restHours) / 24\n\n  return {\n    days,\n    hours: restHours,\n  }\n}\n\nexport const formatDurationFromMinutes = (minutes: number): TDurationParsed => {\n  const\n    restMinutes = minutes % 60,\n    hours = (minutes - restMinutes) / 60\n\n  return {\n    ...formatDurationInHours(hours),\n    minutes: restMinutes,\n  }\n}\n","import React from 'react'\nimport { formatDurationFromMinutes, TDurationParsed } from '../../../../helpers/formatters'\nimport { useTranslation } from 'react-i18next'\n\ninterface IProps {\n  from?: string,\n  duration: number\n}\n\ninterface IFormatArgs {\n  duration: number,\n  from?: string,\n  t: (key: string) => string\n}\n\nconst\n  format = ({ duration, t }: IFormatArgs): string => {\n    //todo: add another formatter according to the 'from' attribute\n    let formatter = formatDurationFromMinutes\n\n    const\n      { days, hours, minutes }: TDurationParsed = formatter(duration),\n      result: string[] = []\n\n    if (days) {\n      result.push(`${days}${t('labels.time.daysShort')}`)\n    }\n\n    if (hours || days) {\n      result.push(`${hours}${t('labels.time.hoursShort')}`)\n    }\n\n    if (minutes || hours) {\n      result.push(`${minutes}${t('labels.time.minutesShort')}`)\n    }\n\n    return result.join(' ')\n  }\n\nconst Duration: React.FC<IProps> = ({ from = 'minutes', duration }) => {\n  const [t] = useTranslation()\n\n  return <>{format({ duration, t, from })}</>\n}\n\nexport default Duration\n","import React from 'react'\nimport { LazyLoadImage } from 'react-lazy-load-image-component'\nimport moment from 'moment'\n\nimport './Ticket.scss'\nimport Price from '../ui/common/Price'\nimport { useTranslation } from 'react-i18next'\nimport { getImage } from '../../api/ticketApi'\nimport { formatFromTo } from '../../helpers/formatters'\nimport Duration from '../ui/common/Duration'\n\ninterface IProps {\n  ticket: ITicket\n}\n\nconst\n  getRangeFromDateAndDuration = (date: string, duration: number): string => formatFromTo([\n    moment(date).format('LT'),\n    moment(date).add(duration, 'minutes').format('LT'),\n  ])\n\nconst Ticket: React.FC<IProps> = ({ ticket }) => {\n  const\n    [t] = useTranslation()\n\n  return (\n    <div className='ticket'>\n      <div className='ticket__header'>\n        <div className='ticket__row'>\n          <div className='ticket__col'>\n            <div className='ticket-price'><Price value={ticket.price}/></div>\n          </div>\n          <div className='ticket__col'>\n            <div className='ticket-company-logo'>\n              <LazyLoadImage\n                alt=''\n                src={getImage(ticket.carrier)} // use normal <img> attributes as props\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='ticket__body'>\n        <div className='ticket-segments'>\n          {ticket.segments.map(({ id, date, destination, duration, origin, stops }) => (\n            <div className='ticket__row' key={id}>\n              <div className='ticket__col'>\n                <SegmentItem label={formatFromTo([origin, destination])}>\n                  {getRangeFromDateAndDuration(date, duration)}\n                </SegmentItem>\n              </div>\n              <div className='ticket__col'>\n                <SegmentItem label={t('tickets.duration')}>\n                  <Duration duration={duration}/>\n                </SegmentItem>\n              </div>\n              <div className='ticket__col'>\n                {!stops.length ? (\n                  <SegmentItem label={t('findTickets.transfers.labelZero')}/>\n                ) : (\n                  <SegmentItem label={t('findTickets.transfers.label', { count: stops.length })}>\n                    {formatFromTo(stops)}\n                  </SegmentItem>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\ninterface ISegmentProps {\n  label: string\n}\n\nconst SegmentItem: React.FC<ISegmentProps> = ({ label, children }) => (\n  <div className='ticket-segment-item'>\n    <div className='ticket-segment-item__label'>{label}</div>\n    <div className='ticket-segment-item__value'>{children}</div>\n  </div>\n)\n\nconst TLoading: React.FC = () => <div className='ticket-loading animated-background-loading'/>\n\nexport const TicketLoading: React.FC = () => (\n  <div className='ticket'>\n    <div className='ticket__header'>\n      <div className='ticket__row'>\n        <div className='ticket__col'><TLoading/></div>\n        <div className='ticket__col'><TLoading/></div>\n      </div>\n    </div>\n    <div className='ticket__body'>\n      <div className='ticket-segments'>\n        <div className='ticket__row'>\n          <div className='ticket__col'><TLoading/><TLoading/></div>\n          <div className='ticket__col'><TLoading/><TLoading/></div>\n          <div className='ticket__col'><TLoading/><TLoading/></div>\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Ticket\n","import React from 'react'\nimport { motion } from 'framer-motion'\n\ninterface IProps {\n  className?: string\n  duration?: number\n  initialX?: number\n}\n\nconst FadeIn: React.FC<IProps> = ({ duration = .2, children, className, initialX }) => {\n  const additional = {\n    x: [initialX || 0, 0]\n  }\n\n  return (\n    <motion.div\n      animate={{ opacity: [0, 1], ...additional }}\n      initial={{ opacity: 0 }}\n      transition={{ duration }}\n      className={className}\n    >\n      {children}\n    </motion.div>\n  )\n}\n\nexport default FadeIn\n","import React, { memo } from 'react'\nimport Ticket, { TicketLoading } from '../../../components/Ticket/Ticket'\nimport FadeIn from '../../../components/ui/common/FadeIn'\nimport { useTranslation } from 'react-i18next'\n\nexport interface IProps {\n  statuses: IFetchingStatuses,\n  tickets: ITicket[]\n}\n\nconst MemoizedTicket = memo(Ticket)\n\nconst TicketsList: React.FC<IProps> = ({ statuses, tickets }) => {\n  const\n    list = tickets.map(ticket => (\n      <div className='tickets-list__item' key={ticket.id}>\n        <FadeIn initialX={8} duration={.25}>\n          <MemoizedTicket ticket={ticket}/>\n        </FadeIn>\n      </div>\n    )),\n    notFound = !tickets.length && !statuses.isFetching && (\n      <div className='tickets-list__item'>\n        <TicketsNotFound/>\n      </div>\n    )\n\n\n  return (\n    <div className='tickets-list'>\n      {list}\n      {statuses.isFetching && (\n        <Loading/>\n      )}\n      {notFound}\n    </div>\n  )\n}\n\nconst Loading: React.FC = () => (\n  <>\n    <div className='tickets-list__item'><TicketLoading/></div>\n    <div className='tickets-list__item'><TicketLoading/></div>\n    <div className='tickets-list__item'><TicketLoading/></div>\n  </>\n)\n\nconst TicketsNotFound: React.FC = () => {\n  const [t] = useTranslation()\n\n  return (\n    <div className='tickets-list-not-found'>\n      {t('tickets.notFound')}\n    </div>\n  )\n}\n\nexport default TicketsList\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport './Error.scss'\n\nconst Error: React.FC = ({ children }) => {\n  const [t] = useTranslation()\n  return (\n    <div className='error'>\n      <div className=\"error__message\">\n        {t('commonMessages.error')}\n      </div>\n\n      {children && (\n        <div className=\"error__body\">\n          {children}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Error\n","import React from 'react'\nimport Error from '../components/ui/common/Error'\nimport Button from '../components/ui/forms/Button'\nimport { useTranslation } from 'react-i18next'\n\nexport interface IWithData {\n  fetch: () => any\n  reset: () => any,\n  statuses: IFetchingStatuses\n}\n\nconst withData = <P extends object>(Component: React.ComponentType<P>) =>\n  class WithLoading extends React.Component<P & IWithData> {\n    componentDidMount(): void {\n      this.props.fetch()\n    }\n\n    componentWillUnmount(): void {\n      this.props.reset()\n    }\n\n    render() {\n      const\n        { fetch, reset, statuses, ...props } = this.props,\n        childProps = { statuses, ...props }\n\n      return (\n        <>\n          {statuses.isError ? (\n            <Reload reload={fetch}/>\n          ) : (\n            <Component {...childProps as P} />\n          )}\n        </>\n      )\n    }\n  }\n\ninterface IReloadProps {\n  reload: () => any\n}\n\nconst Reload: React.FC<IReloadProps> = ({ reload }) => {\n  const [t] = useTranslation()\n\n  return (\n    <Error>\n      <Button onClick={reload}>\n        {t('labels.reload')}\n      </Button>\n    </Error>\n  )\n}\n\nexport default withData\n","import { bindActionCreators } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport TicketsList, { IProps } from './TicketsList'\nimport { IState } from '../../../store/rootReducer'\nimport { clearFindTickets, fetchTickets } from '../../../store/findTickets/actions'\nimport { getFetchingStatuses, getFinalTicketList } from '../../../store/findTickets/selectors'\nimport withData from '../../../hoc'\nimport { IWithData } from '../../../hoc/withData'\n\ntype TStateProps = IProps;\ntype TDispatchProps = Pick<IWithData, 'fetch' | 'reset'>\n\nconst mapStateToProps = (state: IState): TStateProps => ({\n  statuses: getFetchingStatuses(state),\n  tickets: getFinalTicketList(state),\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IState, {}, TAppAnyAction>): TDispatchProps => ({\n  fetch: bindActionCreators(fetchTickets, dispatch),\n  reset: bindActionCreators(clearFindTickets, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withData(TicketsList))\n","import React from 'react'\nimport './ButtonGroup.scss'\n\nconst ButtonGroup: React.FC = ({ children }) => <div className='button-group'>{children}</div>\n\nexport default ButtonGroup\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport Button from '../../../components/ui/forms/Button'\nimport ButtonGroup from '../../../components/ui/forms/ButtonGroup'\nimport { ETicketsSortBy } from '../../../store/findTickets/reducers'\n\nexport interface IProps {\n  sortBy: TTicketsSortByState,\n  selectSortBy: (count: TTicketsSortByState) => TActionSortBy\n}\n\nconst SortTabs: React.FC<IProps> = ({ sortBy, selectSortBy }) => {\n  const\n    [t] = useTranslation(),\n    sortByPriceIsActive = sortBy === ETicketsSortBy.price,\n    selectSortByPrice = () => !sortByPriceIsActive && selectSortBy(ETicketsSortBy.price),\n    selectSortByDuration = () => sortByPriceIsActive && selectSortBy(ETicketsSortBy.duration)\n\n  return (\n    <ButtonGroup>\n      <Button\n        div\n        type={sortByPriceIsActive ? 'primary' : 'secondary'}\n        size='lg'\n        onClick={selectSortByPrice}\n      >\n        {t(`findTickets.tabs.${ETicketsSortBy.price}`)}\n      </Button>\n\n      <Button\n        div\n        type={!sortByPriceIsActive ? 'primary' : 'secondary'}\n        size='lg'\n        onClick={selectSortByDuration}\n      >\n        {t(`findTickets.tabs.${ETicketsSortBy.duration}`)}\n      </Button>\n    </ButtonGroup>\n  )\n}\n\nexport default SortTabs\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { IState } from '../../../store/rootReducer'\nimport { getSortBy } from '../../../store/findTickets/selectors'\nimport { selectSortBy } from '../../../store/findTickets/actions'\nimport SortTabs, { IProps } from './SortTabs'\n\ntype TStateProps = Pick<IProps, 'sortBy'>;\ntype TDispatchProps = Pick<IProps, 'selectSortBy'>\n\nconst mapStateToProps = (state: IState): TStateProps => ({\n  sortBy: getSortBy(state)\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IState, {}, TAppAnyAction>): TDispatchProps => ({\n  selectSortBy: bindActionCreators(selectSortBy, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortTabs)\n","import React from 'react'\nimport './FindTickets.scss'\nimport PlaneLogo from './PlaneLogo'\nimport Layout from '../../components/ui/Layout'\nimport Sidebar from './Sidebar'\nimport TicketsList from './TicketsList'\nimport Tabs from './SortTabs'\n\nconst FindTickets: React.FC = () => (\n  <div className='find-tickets'>\n    <div className='find-tickets__top'>\n      <PlaneLogo/>\n    </div>\n\n    <div className='find-tickets__body'>\n      <Layout Sidebar={\n        Sidebar\n      }>\n        <div className='find-tickets__row'>\n          <Tabs/>\n        </div>\n        <div className='find-tickets__row'>\n          <TicketsList/>\n        </div>\n      </Layout>\n    </div>\n  </div>\n)\n\nexport default FindTickets\n","import React from 'react'\nimport DoNotTouchThis from './pages/DoNotTouchThis'\nimport FindTickets from './pages/FindTickets'\n\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\n\nconst App: React.FC = () => (\n  <Router>\n    <Switch>\n      <Route exact path='/'>\n        <Redirect to='/find-tickets'/>\n      </Route>\n      <Route exact path='/find-tickets'>\n        <FindTickets/>\n      </Route>\n      <Route exact path='/o-privet'>\n        <DoNotTouchThis/>\n      </Route>\n      <Route path='*'>\n        <Redirect to='/o-privet'/>\n      </Route>\n    </Switch>\n  </Router>\n)\n\nexport default App\n","const CURRENCIES = {\n  RUB: {\n    name: 'RUB',\n    symbol: 'Р'\n  },\n  USD: {\n    name: 'USD',\n    symbol: '$'\n  }\n}\n\nconst INITIAL_STATE: ICommonState = {\n  currency: CURRENCIES.RUB,\n  locale: 'ru-RU',\n}\n\nexport const currency =\n  (state: TCurrency = INITIAL_STATE.currency): TCurrency => {\n    return state\n  }\n\nexport const locale =\n  (state: TLocale = INITIAL_STATE.locale): TLocale => {\n    return state\n  }\n","import { combineReducers } from 'redux'\nimport * as reducers from './reducers'\n\nexport default combineReducers({ ...reducers })\n","import { combineReducers } from 'redux'\nimport { pagination, sortBy, statuses, tickets, transfers } from './reducers'\n\n\nexport default combineReducers({\n  tickets,\n  statuses,\n  sortBy,\n  pagination,\n  filters: combineReducers({ transfers }),\n})\n","import { combineReducers } from 'redux'\nimport common from './common'\nimport findTickets from './findTickets'\n\nexport interface IState {\n  common: ICommonState,\n  findTickets: IFindTicketsState\n}\n\nexport default combineReducers({\n  common,\n  findTickets\n})\n","import { applyMiddleware, createStore, Middleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport * as reduxLogger from 'redux-logger'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport reducers from './rootReducer'\n\nconst\n  middlewares: Middleware[] = [thunk],\n  isDevMode = process.env.NODE_ENV === 'development'\n\nif (isDevMode) {\n  middlewares.push(reduxLogger.createLogger())\n}\n\nlet enhancer = applyMiddleware(...middlewares)\n\nif (isDevMode) {\n  enhancer = composeWithDevTools(enhancer)\n}\n\nexport default enhancer(createStore)(reducers)\n","import { ETicketsSortBy } from '../store/findTickets/reducers'\n\nconst findTickets = {\n  tabs: {\n    [ETicketsSortBy.price]: 'Самый дешевый',\n    [ETicketsSortBy.duration]: 'Самый быстрый',\n  },\n\n  transfers: {\n    title: 'Количество пересадок',\n    all: 'Все',\n    labelZero: 'Без пересадок',\n    label_0: '{{count}} пересадка',\n    label_1: '{{count}} пересадки',\n    label_2: '{{count}} пересадок',\n  },\n}\n\nconst labels = {\n  time: {\n    daysShort: 'д',\n    hoursShort: 'ч',\n    minutesShort: 'м',\n  },\n\n  reload: 'перезагрузить',\n}\n\nconst commonMessages = {\n  error: 'Что то пошло не так',\n}\n\nconst tickets = {\n  duration: 'В пути',\n  notFound: 'По выбранным критериям нет билетов, попробуйте изменить поиск ✈️',\n}\n\nexport default {\n  findTickets,\n  tickets,\n  labels,\n  commonMessages,\n}\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport ruTranslation from '../translations/ru-RU'\n\nclass TranslationService {\n  init(locale: string) {\n    i18n\n      .use(initReactI18next) // passes i18n down to react-i18next\n      .init({\n        resources: {\n          'ru-RU': {\n            translation: ruTranslation\n          },\n        },\n        lng: locale,\n        fallbackLng: 'ru-RU',\n\n        interpolation: {\n          escapeValue: false\n        }\n      })\n  }\n}\n\nexport default new TranslationService()\n","import 'moment/locale/ru'\nimport moment from 'moment'\n\nclass MomentService {\n  setLocale(locale?: string) {\n    moment.locale(locale)\n  }\n}\n\nexport default new MomentService()\n","import { IState } from './store/rootReducer'\nimport translationService from './services/translation'\nimport momentService from './services/moment'\nimport { getLocale } from './store/common/selectors'\n\nconst initLocale = (state: IState) => {\n  const locale = getLocale(state)\n  translationService.init(getLocale(state))\n  momentService.setLocale(locale)\n}\n\nconst init = (state: IState) => {\n  initLocale(state)\n}\n\nexport default init\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './styles/index.scss'\nimport App from './App'\nimport store from './store'\nimport init from './initialize'\nimport * as serviceWorker from './serviceWorker'\n\nconst\n  render = () => {\n    ReactDOM.render(\n      <Provider store={store}>\n        <App/>\n      </Provider>,\n      document.getElementById('root'))\n  }\n\ninit(store.getState())\nstore.subscribe(render)\n\nrender()\n\nserviceWorker.unregister()\n"],"sourceRoot":""}