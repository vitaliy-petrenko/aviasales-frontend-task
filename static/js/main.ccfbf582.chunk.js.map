{"version":3,"sources":["store/findTickets/types.ts","helpers/bem.ts","components/ui/forms/Button/Button.tsx","pages/DoNotTouchThis/DoNotTouchThis.tsx","components/PlaneLogo/PlaneLogo.tsx","store/findTickets/selectors.ts","pages/FindTickets/PlaneLogo/PlaneLogoContainer.tsx","components/ui/Layout/Layout.tsx","api/config.ts","helpers/fetch.ts","normalizers/ticketNormalizers.ts","api/ticketApi.ts","store/actionTypes.ts","helpers/misc.ts","store/findTickets/actions.ts","assets/icons/check.svg","components/ui/forms/Checkbox/Checkbox.tsx","components/ui/forms/FiltersSection/FiltersSection.tsx","pages/FindTickets/Sidebar/Sidebar.tsx","pages/FindTickets/Sidebar/SidebarContainer.ts","components/ui/common/Price/Price.tsx","store/common/selectors.ts","components/ui/common/Price/PriceContainer.tsx","helpers/formatters.ts","components/ui/common/Duration/Duration.tsx","components/Ticket/Ticket.tsx","components/ui/common/FadeIn/FadeIn.tsx","pages/FindTickets/TicketsList/TicketsList.tsx","components/ui/common/Error/Error.tsx","hoc/withData.tsx","pages/FindTickets/TicketsList/TicketListContainer.tsx","components/ui/forms/ButtonGroup/ButtonGroup.tsx","pages/FindTickets/SortTabs/SortTabs.tsx","pages/FindTickets/SortTabs/SortTabsContainer.ts","pages/FindTickets/FindTickets.tsx","App.tsx","store/common/reducers.ts","store/common/index.ts","store/findTickets/reducers.ts","store/findTickets/index.ts","store/rootReducer.ts","store/index.ts","translations/ru-RU.ts","services/translation.ts","services/moment.ts","store/initialize.ts","serviceWorker.ts","index.tsx"],"names":["ETicketsSortBy","makeBEMModifier","base","modifier","getButtonClassName","type","size","isLoading","block","isDisabled","modifiers","push","baseClass","isActive","result","length","makeModifier","bind","map","join","makeBemClassNames","Button","div","a","text","children","props","className","Tag","WTF","console","log","to","PlaneLogo","animated","animate","scale","rotate","transition","duration","loop","Infinity","x","y","getFetchingStatuses","state","findTickets","statuses","getFilters","filters","getSortBy","sortBy","getTicketsListSorted","createSelector","tickets","_sortBy","ticket","accumulateDuration","segments","price","getTicketsListFiltered","transfers","filter","allStops","stops","getTransfersCounts","count","forEach","stopCount","selected","includes","reduce","accumulate","getFinalTicketList","pagination","offset","limit","slice","connect","isFetching","Layout","Sidebar","config","gateWays","searchKey","fetchJSON","path","fetch","response","ok","json","status","Promise","reject","normalizeTicket","rest","id","v4","normalizeTicketSegment","segment","KEY_PATH","TICKETS_PATH","fetchTicketsSearchId","searchId","fetchTickets","stop","rawTickets","warn","ACTION_TYPES","FIND_TICKETS","TICKETS","ADD","CLEAR","STATUSES","IS_FETCHING","IS_ERROR","FILTERS","TRANSFERS","SET_SELECTED_OPTIONS","SET_AVAILABLE_OPTIONS","SORT_BY","orderedArray","Array","from","keys","setFetchingStatus","payload","setFetchingErrorStatus","clearTickets","selectSortBy","setSelectedOptions","options","dispatch","apiFetchTickets","then","addTickets","Math","max","getAvailableOptions","catch","finally","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","title","width","height","viewBox","fill","ref","ForwardRef","forwardRef","Checkbox","onChange","e","checked","FiltersSection","useTranslation","t","available","isAllSelected","onToggle","option","array","item","bindActionCreators","Price","value","currency","formatted","toLocaleString","format","symbol","name","getCurrency","common","getLocale","locale","formatFromTo","arr","formatDurationFromMinutes","minutes","restMinutes","hours","restHours","days","formatDurationInHours","Duration","SegmentItem","label","TLoading","TicketLoading","Ticket","carrierCode","alt","src","carrier","date","destination","origin","moment","add","getRangeFromDateAndDuration","FadeIn","additional","initialX","opacity","initial","Loading","TicketsNotFound","TicketsList","list","notFound","Error","Reload","reload","onClick","withData","Component","reset","childProps","isError","React","ButtonGroup","sortByVariants","SortTabs","variant","FindTickets","App","exact","INITIAL_STATE","combineReducers","reducers","isAllOptionsSelected","middlewares","thunk","enhancer","applyMiddleware","createStore","tabs","all","labelZero","label_0","label_1","label_2","labels","time","daysShort","hoursShort","minutesShort","commonMessages","error","i18n","use","initReactI18next","init","resources","translation","ruTranslation","lng","fallbackLng","interpolation","escapeValue","translationService","momentService","setLocale","initLocale","Boolean","window","location","hostname","match","render","ReactDOM","store","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+dA0CYA,E,6EC1CCC,EAAkB,SAACC,EAAcC,GAAf,gBAC1BD,EAD0B,aACjBC,ICoCRC,EAAqB,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,KAAMC,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,WACpDC,EAAY,GAMlB,OAJIL,GAAMK,EAAUC,KAAKN,GACrBC,GAAMI,EAAUC,KAAKL,GACrBE,GAAOE,EAAUC,KAAK,SD/BK,SAC/BC,EAD+B,GAGnB,IADVL,EACS,EADTA,UAAWM,EACF,EADEA,SAAUJ,EACZ,EADYA,WACZ,IADwBC,iBACxB,MADoC,GACpC,EACLI,EAAS,CAACF,GAMhB,GAJIL,GAAWO,EAAOH,KAAK,cACvBF,GAAYK,EAAOH,KAAK,eACxBE,GAAUC,EAAOH,KAAK,aAEtBC,GAAaF,EAAUK,OAAQ,CACjC,IAAMC,EAAef,EAAgBgB,KAAK,KAAML,GAEhDE,EAAOH,KAAP,MAAAG,EAAM,YAASJ,EAAUQ,IAAIF,KAG/B,OAAOF,EAAOK,KAAK,KCiBZC,CAvBe,MAuBoB,CAAEb,YAAWE,aAAYC,eAGtDW,EAvBb,SAAC,GAAgG,IAA9FC,EAA6F,EAA7FA,IAAKC,EAAwF,EAAxFA,EAAwF,IAArFlB,YAAqF,MAA9E,UAA8E,EAAnEC,EAAmE,EAAnEA,KAAMC,EAA6D,EAA7DA,UAAWE,EAAkD,EAAlDA,WAAYD,EAAsC,EAAtCA,MAAOgB,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAaC,EAAY,4FAE5FC,EAAYvB,EAAmB,CAAEC,OAAMC,OAAMC,YAAWE,aAAYD,UACpEoB,EAAMN,EAAM,MAAQC,EAAI,IAAM,SAEhC,OACE,kBAACK,EAAD,eAAKD,UAAWA,GAAeD,GAC5BF,EACAC,I,QCAMI,EA3BO,WAGpB,OAFAC,QAAQC,IAAI,UAGV,yBAAKJ,UAAU,qBACb,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMK,GAAG,IAAIL,UAAU,eACrB,kBAAC,EAAD,CAAQrB,KAAK,KAAKgB,KAAG,EAACjB,KAAK,aAA3B,8BAGJ,yBAAKsB,UAAU,oBACf,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,sB,sBCyBNM,EA5CqB,SAAC,GAA0B,IAAD,IAAvBC,gBAAuB,SAC5D,OACE,yBAAKP,UAAU,cACb,kBAAC,IAAOL,IAAR,CACEK,UAAU,oBACVQ,QACED,EAAW,CACTE,MAAO,CAAC,EAAG,IAAK,EAAG,IAAK,GAAIC,OAAQ,CAAC,EAAG,MACtC,CACFD,MAAO,EAAGC,OAAQ,GAGtBC,WACEJ,EAAW,CACTK,SAAU,EAAGC,KAAMC,KACjB,CACFF,SAAU,GAAIC,KAAM,KAK1B,yBAAKb,UAAU,0BACb,kBAAC,IAAOL,IAAR,CACEK,UAAU,oBACVQ,QACED,EAAW,CACTE,MAAO,CAAC,EAAG,GAAI,GAAI,GAAIC,OAAQ,CAAC,GAAI,EAAG,GAAI,EAAG,GAAIK,EAAG,CAAC,GAAI,EAAG,EAAG,EAAG,GAAIC,EAAG,CAAC,EAAG,EAAG,GAAI,EAAG,IACtF,CACFP,MAAO,EAAGC,OAAQ,EAAGK,EAAG,EAAGC,EAAG,GAGlCL,WACEJ,EAAW,CACTK,SAAU,EAAGC,KAAMC,KACjB,CACFF,SAAU,GAAIC,KAAM,Q,0BJDtBxC,O,iBAAAA,I,wBAAAA,M,KKnCL,IAAM4C,EAAsB,SAACC,GAAD,OAAsCA,EAAMC,YAAYC,UAC9EC,EAAa,SAACH,GAAD,OAAmCA,EAAMC,YAAYG,SAClEC,EAAY,SAACL,GAAD,OAA2BA,EAAMC,YAAYK,QAKzDC,EAAuBC,aAHH,SAACR,GAAD,OAA8BA,EAAMC,YAAYQ,UAK/EJ,GACA,SAACI,EAASH,GACR,OAAIA,IAAWnD,EAAeuC,SAErBgB,iBAAQD,GAAS,SAACE,GAAD,OAAYC,EAAmBD,EAAOE,aAErDP,IAAWnD,EAAe2D,MAE5BJ,iBAAQD,GAAS,qBAAGK,SAGpBL,KAKAM,EAAyBP,YACpCD,EACAJ,GACA,SAACM,EAAD,GAA6B,IAAjBO,EAAgB,EAAhBA,UAGV,OAAOP,EAAQQ,QAAO,SAAAN,GACpB,IAAMO,EAHmB,SAACP,GAAD,OAA+BA,EAAOE,SAASxC,KAAI,qBAAG8C,MAAkBjD,UAGhFkD,CAAmBT,GAEhCU,EAAQ,EAIZ,OAFAH,EAASI,SAAQ,SAAAC,GAAS,OAAIP,EAAUQ,SAASC,SAASF,IAAcF,OAEjEA,IAAUH,EAAShD,aAK1B0C,EAAqB,SAACC,GAC1B,OAAOA,EAASa,QAAO,SAACC,EAAD,UAA8BA,EAA9B,EAAejC,WAAsC,IAIjEkC,EAAqBpB,YAChCO,GA9C2B,SAACf,GAAD,OAAgCA,EAAMC,YAAY4B,cAgD7E,SAACpB,EAAD,OAAYqB,EAAZ,EAAYA,OAAQC,EAApB,EAAoBA,MAApB,OAAgCtB,EAAQuB,MAAMF,EAAQA,EAASC,MC/ClDE,eAJS,SAACjC,GAAD,MAAiC,CACvDX,SAAUU,EAAoBC,GAAOkC,cAGxBD,CAAyB7C,GCUzB+C,G,MAdkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASxD,EAAZ,EAAYA,SAAZ,OAC/B,yBAAKE,UAAU,UACZsD,GACC,yBAAKtD,UAAU,mBACb,kBAACsD,EAAD,OAIJ,yBAAKtD,UAAU,gBACZF,M,gCCPQyD,EATA,CACbhF,KAAM,uCAENiF,SAAU,CACRC,UAAW,UACX9B,QAAS,aCLA+B,EAAS,uCAAG,WAAOC,GAAP,mBAAA/D,EAAA,sEACAgE,MAAMD,GADN,YACjBE,EADiB,QAGVC,GAHU,yCAIdD,EAASE,QAJK,cAOnBC,EAASH,EAASG,OAPC,UAQNH,EAAShE,OARH,eAQnBA,EARmB,yBAUdoE,QAAQC,OAAR,UAAkBF,EAAlB,aAA6BnE,KAVf,4CAAH,sD,wkBCIf,IAAMsE,EAAkB,SAACtC,GACAA,EAAtBE,SADuD,IAC1CqC,EADyC,YAChCvC,EADgC,cAG9D,OAAO,EAAP,CACEwC,GAAIC,eACJvC,SAAUF,EAAOE,SAASxC,IAAIgF,IAC3BH,IAIMG,EAAyB,SAACC,GAAD,UACpCH,GAAIC,gBACDE,ICXHC,EAAWlB,EAAOhF,KAAOgF,EAAOC,SAASC,UACzCiB,EAAenB,EAAOhF,KAAOgF,EAAOC,SAAS7B,QAG7CgD,EAAoB,uCAAG,8BAAA/E,EAAA,sEACM8D,EAAUe,GADhB,uBACbG,EADa,EACbA,SADa,kBAGdA,GAHc,2CAAH,qDAMTC,EAAY,uCAAG,sCAAAjF,EAAA,sEAEP+E,IAFO,OAExBC,EAFwB,OAGxBjD,EAAU,GACVgC,EAJwB,UAIde,EAJc,qBAIWE,GAEjCE,GAAO,EANe,UAQlBA,EARkB,2CAUPpB,EAAUC,GAVH,QAUtBxE,EAVsB,OAWtB4F,EAAa5F,EAAOwC,QAEtBA,EAAQ3C,KAAR,MAAA2C,EAAO,YAASoD,EAAWxF,IAAI4E,KAC/BW,EAAO3F,EAAO2F,KAdU,kDAgBxB3E,QAAQ6E,KAAR,MAhBwB,wDAmBnBrD,GAnBmB,0DAAH,qDCcVsD,EAJM,CACnBC,aA1ByB,CAEzBC,QAAS,CACPC,IAAK,2BACLC,MAAO,8BAITC,SAAU,CACRC,YAAa,oCACbC,SAAU,kCAIZC,QAAS,CACPC,UAAW,CACTC,qBAAsB,sDACtBC,sBAAuB,yDAK3BC,QAAS,yBCtBEC,EAAe,SAACvD,GAAD,OAA6BwD,MAAMC,KAAKD,MAAMxD,GAAO0D,SCO3EC,EAAoB,SAAClC,GAAD,MAA6C,CACrEtF,KAAMuG,EAAaC,aAAaI,SAASC,YACzCY,QAASnC,IAGLoC,EAAyB,SAACpC,GAAD,MAA6C,CAC1EtF,KAAMuG,EAAaC,aAAaI,SAASE,SACzCW,QAASnC,IAQEqC,EAAe,iBAA4B,CACtD3H,KAAMuG,EAAaC,aAAaC,QAAQE,QAG7BiB,EAAe,SAAC9E,GAAD,MAA4C,CACtE9C,KAAMuG,EAAaC,aAAaW,QAChCM,QAAS3E,IAQE+E,EAAqB,SAACC,GAAD,MAAgD,CAChF9H,KAAMuG,EAAaC,aAAaO,QAAQC,UAAUC,qBAClDQ,QAASK,IAWE3B,EAAe,kBAAM,SAAC4B,GACjCA,EAASL,GAAuB,IAChCK,EAASP,GAAkB,IAE3BQ,IACGC,MACC,SAAAhF,GAxB6B,IAAC6E,EAyB5BC,EAvCW,SAAC9E,GAAD,MAA4C,CAC7DjD,KAAMuG,EAAaC,aAAaC,QAAQC,IACxCe,QAASxE,GAqCMiF,CAAWjF,IACpB8E,GA1B4BD,EAUR,SAAC7E,GAC3B,IAAIY,EAAQ,EAIZ,OAFAZ,EAAQa,SAAQ,SAAAX,GAAM,OAAIA,EAAOE,SAASS,SAAQ,gBAAGH,EAAH,EAAGA,MAAH,OAAeE,EAAQsE,KAAKC,IAAIvE,EAAOF,EAAMjD,cAExF0G,EAAavD,GAWewE,CAAoBpF,GA1B0B,CACjFjD,KAAMuG,EAAaC,aAAaO,QAAQC,UAAUE,sBAClDO,QAASK,QA0BNQ,OAAM,WACLP,EAASL,GAAuB,OAEjCa,SAAQ,WACPR,EAASP,GAAkB,S,QC/DjC,SAASgB,KAA2Q,OAA9PA,GAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUnI,OAAQkI,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIG,KAAOD,EAAcL,OAAOO,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQJ,EAAOI,GAAOD,EAAOC,IAAY,OAAOJ,IAA2BQ,MAAMC,KAAMP,WAEhT,SAASQ,GAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKH,EAAnED,EAEzF,SAAuCG,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKH,EAA5DD,EAAS,GAAQY,EAAad,OAAOlB,KAAKuB,GAAqB,IAAKF,EAAI,EAAGA,EAAIW,EAAW7I,OAAQkI,IAAOG,EAAMQ,EAAWX,GAAQU,EAASE,QAAQT,IAAQ,IAAaJ,EAAOI,GAAOD,EAAOC,IAAQ,OAAOJ,EAFxMc,CAA8BX,EAAQQ,GAAuB,GAAIb,OAAOiB,sBAAuB,CAAE,IAAIC,EAAmBlB,OAAOiB,sBAAsBZ,GAAS,IAAKF,EAAI,EAAGA,EAAIe,EAAiBjJ,OAAQkI,IAAOG,EAAMY,EAAiBf,GAAQU,EAASE,QAAQT,IAAQ,GAAkBN,OAAOO,UAAUY,qBAAqBV,KAAKJ,EAAQC,KAAgBJ,EAAOI,GAAOD,EAAOC,IAAU,OAAOJ,EAMne,IAAI,GAEJ,IAAMkB,cAAc,OAAQ,CAC1BC,EAAG,wFAGD,GAAW,SAAkBC,GAC/B,IAAIC,EAASD,EAAKC,OACdC,EAAQF,EAAKE,MACb5I,EAAQgI,GAAyBU,EAAM,CAAC,SAAU,UAEtD,OAAO,IAAMF,cAAc,MAAOrB,GAAS,CACzC0B,MAAO,GACPC,OAAQ,EACRC,QAAS,WACTC,KAAM,OACNC,IAAKN,GACJ3I,GAAQ4I,EAAQ,IAAMJ,cAAc,QAAS,KAAMI,GAAS,KAAM,KAGnEM,GAAa,IAAMC,YAAW,SAAUnJ,EAAOiJ,GACjD,OAAO,IAAMT,cAAc,GAAUrB,GAAS,CAC5CwB,OAAQM,GACPjJ,OCRUoJ,IDUA,I,MCvBoB,SAAC,GAAwD,IAAtDrJ,EAAqD,EAArDA,SAAUsJ,EAA2C,EAA3CA,SAA2C,IAAjC1K,YAAiC,MAA1B,WAA0B,EAAX0F,EAAW,8CACzF,OACE,2BAAOpE,UAAU,YACf,yCAAOtB,KAAMA,EAAM0K,SAAQ,+GAAE,SAAAC,GAAC,OAAID,EAASC,EAAEhC,OAAOiC,aAAclF,IAClE,0BAAMpE,UAAU,kBAAiB,kBAAC,GAAD,OAEjC,0BAAMA,UAAU,mBACbF,MCCMyJ,I,MAX0B,SAAC,GAAD,IAAGZ,EAAH,EAAGA,MAAO7I,EAAV,EAAUA,SAAV,OACvC,yBAAKE,UAAU,mBACb,yBAAKA,UAAU,0BACZ2I,GAEH,yBAAK3I,UAAU,yBACZF,M,QCyCQwD,GA1CmB,SAAC,GAAqC,IAAnCiD,EAAkC,EAAlCA,mBAAoBjF,EAAc,EAAdA,QAAc,EAE7DkI,eAALC,EAFkE,uBAGzCnI,EAAQY,UAAhCQ,EAHiE,EAGjEA,SAAUgH,EAHuD,EAGvDA,UACZC,EAAgBD,EAAUtK,SAAWsD,EAAStD,OAU9CwK,EAAW,SAACC,GLxBa,IAAIC,EAAYC,EKyBvCxD,GLzBuCwD,EKyBIF,GLzBhBC,EKyBMpH,GLxBxBC,SAASoH,GAAQD,EAAM3H,QAAO,SAAAvC,GAAC,OAAImK,IAASnK,KAAlD,sBAA2DkK,GAA3D,CAAkEC,OK2BzE,OACE,kBAAC,GAAD,CAAgBpB,MAAM,uHACpB,kBAAC,GAAD,CACEW,QAASK,EACTP,SAhBU,WACR1G,EAAStD,QAAUuK,EACrBpD,EAAmB,IAEnBA,EAAmB,YAAImD,MActBD,EAAE,8BAIHC,EAAUnK,KAAI,SAAAsK,GAAM,OAClB,kBAAC,GAAD,CACEpC,IAAKoC,EACLP,QAAS5G,EAASC,SAASkH,GAC3BT,SAAU,kBAAMQ,EAASC,KAExBJ,EAAE,8BAAD,OAA0C,IAAXI,EAAe,OAAS,IAAM,CAAEtH,MAAOsH,UC1BrE1G,gBARS,SAACjC,GAAD,MAAiC,CACvDI,QAASD,EAAWH,OAGK,SAACuF,GAAD,MAAyE,CAClGF,mBAAoByD,6BAAmBzD,EAAoBE,MAG9CtD,CAA6CG,I,6BCI7C2G,I,MAdiB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAEtCC,EAJW,SAACF,GAAD,OAA2BA,EAAMG,iBAIhCC,CAAOJ,GACnBK,EAASJ,EAASI,OAEpB,MAAsB,QAAlBJ,EAASK,KACX,8CAAMD,GAAN,OAAeH,IAIf,8CAAMA,EAAN,YAAmBG,MCjBVE,GAAc,SAACvJ,GAAD,OAA8BA,EAAMwJ,OAAOP,UACzDQ,GAAY,SAACzJ,GAAD,OAA4BA,EAAMwJ,OAAOE,QCKnDzH,gBAJS,SAACjC,GAAD,MAAoB,CAC1CiJ,SAAUM,GAAYvJ,MAGTiC,CAAyB8G,I,+NCTjC,IAAMY,GAAe,SAACC,GAAD,OAAyCA,EAAItL,KAAK,QAmBjEuL,GAA4B,SAACC,GACxC,IACEC,EAAcD,EAAU,GAG1B,O,2VAAO,IAhB4B,SAACE,GACpC,IACEC,EAAYD,EAAQ,GAGtB,MAAO,CACLE,MAHQF,EAAQC,GAAa,GAI7BD,MAAOC,GAUJE,EAHML,EAAUC,GAAe,IAEpC,CAEED,QAASC,KCmBEK,GANoB,SAAC,GAAoC,IAAD,IAAjCtF,YAAiC,MAA1B,UAA0B,EAAfpF,EAAe,EAAfA,SAAe,EACzD4I,eAALC,EAD8D,qBAGrE,OAAO,oCA1BE,SAAC,GAA0C,IAAxC7I,EAAuC,EAAvCA,SAAU6I,EAA6B,EAA7BA,EAA6B,EAEjCsB,GAGwCnK,GAApDwK,EAL6C,EAK7CA,KAAMF,EALuC,EAKvCA,MAAOF,EALgC,EAKhCA,QACf7L,EAAmB,GAcrB,OAZIiM,GACFjM,EAAOH,KAAP,UAAeoM,GAAf,OAAsB3B,EAAE,2BAGtByB,GACF/L,EAAOH,KAAP,UAAekM,GAAf,OAAuBzB,EAAE,4BAGvBuB,GACF7L,EAAOH,KAAP,UAAegM,GAAf,OAAyBvB,EAAE,8BAGtBtK,EAAOK,KAAK,KAMX8K,CAAO,CAAE1J,WAAU6I,IAAGzD,WCoC5BuF,GAAuC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAO1L,EAAV,EAAUA,SAAV,OAC3C,yBAAKE,UAAU,uBACb,yBAAKA,UAAU,8BAA8BwL,GAC7C,yBAAKxL,UAAU,8BAA8BF,KAI3C2L,GAAqB,kBAAM,yBAAKzL,UAAU,gDAEnC0L,GAA0B,kBACrC,yBAAK1L,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eAAc,kBAAC,GAAD,OAC7B,yBAAKA,UAAU,eAAc,kBAAC,GAAD,SAGjC,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eAAc,kBAAC,GAAD,MAAW,kBAAC,GAAD,OACxC,yBAAKA,UAAU,eAAc,kBAAC,GAAD,MAAW,kBAAC,GAAD,OACxC,yBAAKA,UAAU,eAAc,kBAAC,GAAD,MAAW,kBAAC,GAAD,YAOnC2L,GArFkB,SAAC,GAAgB,IdezBC,EcfW/J,EAAa,EAAbA,OAAa,EAEvC2H,eAALC,EAF4C,qBAI/C,OACE,yBAAKzJ,UAAU,UACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,gBAAe,kBAAC,GAAD,CAAOkK,MAAOrI,EAAOG,UAErD,yBAAKhC,UAAU,eACb,yBAAKA,UAAU,uBACb,kBAAC,iBAAD,CACE6L,IAAI,GACJC,KdASF,EcAK/J,EAAOkK,QdAb,8BAAgDH,EAAhD,ecMlB,yBAAK5L,UAAU,gBACb,yBAAKA,UAAU,mBACZ6B,EAAOE,SAASxC,KAAI,gBAAG8E,EAAH,EAAGA,GAAI2H,EAAP,EAAOA,KAAMC,EAAb,EAAaA,YAAarL,EAA1B,EAA0BA,SAAUsL,EAApC,EAAoCA,OAAQ7J,EAA5C,EAA4CA,MAA5C,OACnB,yBAAKrC,UAAU,cAAcyH,IAAKpD,GAChC,yBAAKrE,UAAU,eACb,kBAAC,GAAD,CAAawL,MAAOX,GAAa,CAACqB,EAAQD,KA/B1B,SAACD,EAAcpL,GAAf,OAA4CiK,GAAa,CACrFsB,KAAOH,GAAM1B,OAAO,MACpB6B,KAAOH,GAAMI,IAAIxL,EAAU,WAAW0J,OAAO,QA8B9B+B,CAA4BL,EAAMpL,KAGvC,yBAAKZ,UAAU,eACb,kBAAC,GAAD,CAAawL,MAAO/B,EAAE,qBACpB,kBAAC,GAAD,CAAU7I,SAAUA,MAGxB,yBAAKZ,UAAU,eACXqC,EAAMjD,OAGN,kBAAC,GAAD,CAAaoM,MAAO/B,EAAE,8BAA+B,CAAElH,MAAOF,EAAMjD,UACjEyL,GAAaxI,IAHhB,kBAAC,GAAD,CAAamJ,MAAO/B,EAAE,8C,6jBClDxC,IAiBe6C,GAjBkB,SAAC,GAAsD,IAAD,IAAnD1L,gBAAmD,MAAxC,GAAwC,EAApCd,EAAoC,EAApCA,SAAUE,EAA0B,EAA1BA,UACrDuM,EAAa,CACjBxL,EAAG,CAFgF,EAAfyL,UAEpD,EAAG,IAGrB,OACE,kBAAC,IAAO7M,IAAR,CACEa,QAAO,IAAIiM,QAAS,CAAC,EAAG,IAAOF,GAC/BG,QAAS,CAAED,QAAS,GACpB9L,WAAY,CAAEC,YACdZ,UAAWA,GAEVF,ICkBD6M,GAAoB,kBACxB,oCACE,yBAAK3M,UAAU,sBAAqB,kBAAC,GAAD,OACpC,yBAAKA,UAAU,sBAAqB,kBAAC,GAAD,OACpC,yBAAKA,UAAU,sBAAqB,kBAAC,GAAD,SAIlC4M,GAA4B,WAAO,IAAD,EAC1BpD,eAALC,EAD+B,qBAGtC,OACE,yBAAKzJ,UAAU,0BACZyJ,EAAE,sBAKMoD,GA7CwC,SAAC,GAA2B,IAAzBzL,EAAwB,EAAxBA,SAAUO,EAAc,EAAdA,QAEhEmL,EAAOnL,EAAQpC,KAAI,SAAAsC,GAAM,OACvB,yBAAK7B,UAAU,qBAAqByH,IAAK5F,EAAOwC,IAC9C,kBAAC,GAAD,CAAQmI,SAAU,EAAG5L,SAAU,IAC7B,kBAAC,GAAD,CAAQiB,OAAQA,SAItBkL,GAAYpL,EAAQvC,SAAWgC,EAASgC,YACtC,yBAAKpD,UAAU,sBACb,kBAAC,GAAD,OAKN,OACE,yBAAKA,UAAU,gBACZoB,EAASgC,YACR,kBAAC,GAAD,MAED0J,EACAC,I,6CCbQC,I,MAjBS,SAAC,GAAkB,IAAhBlN,EAAe,EAAfA,SAAe,EAC5B0J,eAALC,EADiC,qBAExC,OACE,yBAAKzJ,UAAU,SACb,yBAAKA,UAAU,kBACZyJ,EAAE,yBAGJ3J,GACC,yBAAKE,UAAU,eACZF,M,+NCFX,IA+BMmN,GAAiC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACzC1D,eAALC,EAD8C,qBAGrD,OACE,kBAAC,GAAD,KACE,kBAAC,EAAD,CAAQ0D,QAASD,GACdzD,EAAE,oBAMI2D,GA3CE,SAAmBC,GAAnB,wMAGXvF,KAAK/H,MAAM6D,UAHA,6CAOXkE,KAAK/H,MAAMuN,UAPA,+BAUH,IAAD,EAEkCxF,KAAK/H,MAA1C6D,EAFG,EAEHA,MAAcxC,GAFX,EAEIkM,MAFJ,EAEWlM,UAChBmM,E,2VAHK,EAGUnM,YAHV,6CAKP,OACE,oCACGA,EAASoM,QACR,kBAAC,GAAD,CAAQN,OAAQtJ,IAEhB,kBAACyJ,EAAcE,QApBV,GACWE,IAAMJ,YCWnBlK,gBAVS,SAACjC,GAAD,MAAiC,CACvDE,SAAUH,EAAoBC,GAC9BS,QAASmB,EAAmB5B,OAGH,SAACuF,GAAD,MAAyE,CAClG7C,MAAOoG,6BAAmBnF,EAAc4B,GACxC6G,MAAOtD,6BAAmB3D,EAAcI,MAG3BtD,CAA6CiK,GAASP,KCnBtDa,I,MAFe,SAAC,GAAD,IAAG5N,EAAH,EAAGA,SAAH,OAAkB,yBAAKE,UAAU,gBAAgBF,KCQzE6N,GAAiB,CAACtP,EAAe2D,MAAO3D,EAAeuC,UA4B9CgN,GA1BoB,SAAC,GAA8B,IAA5BpM,EAA2B,EAA3BA,OAAQ8E,EAAmB,EAAnBA,aAAmB,EACnDkD,eAALC,EADwD,qBAG/D,OACE,kBAAC,GAAD,KAEIkE,GAAepO,KAAI,SAAAsO,GACjB,IAAM3O,EAAWsC,IAAWqM,EAE5B,OACE,kBAAC,EAAD,CACElO,KAAG,EACH8H,IAAKoG,EACLnP,KAAMQ,EAAW,UAAY,YAC7BP,KAAK,KACLwO,QAAS,kBAAOjO,GAAYoH,EAAauH,KAExCpE,EAAE,oBAAD,OAAqBoE,UCVtB1K,gBARS,SAACjC,GAAD,MAAiC,CACvDM,OAAQD,EAAUL,OAGO,SAACuF,GAAD,MAAyE,CAClGH,aAAc0D,6BAAmB1D,EAAcG,MAGlCtD,CAA6CyK,ICS7CE,GArBe,kBAC5B,yBAAK9N,UAAU,gBACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,OAGF,yBAAKA,UAAU,sBACb,kBAAC,EAAD,CAAQsD,QACNA,IAEA,yBAAKtD,UAAU,qBACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,qBACb,kBAAC,GAAD,W,SCGK+N,GAnBO,kBACpB,kBAAC,IAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOC,OAAK,EAACrK,KAAK,KAChB,kBAAC,KAAD,CAAUtD,GAAG,mBAEf,kBAAC,KAAD,CAAO2N,OAAK,EAACrK,KAAK,iBAChB,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOqK,OAAK,EAACrK,KAAK,aAChB,kBAAC,EAAD,OAEF,kBAAC,KAAD,CAAOA,KAAK,KACV,kBAAC,KAAD,CAAUtD,GAAG,kB,SCNf4N,I,YAA8B,CAClC9D,SAXK,CACHK,KAAM,MACND,OAAQ,UAUVK,OAAQ,UAGGT,GACX,WAA2D,IAA1DjJ,EAAyD,uDAAtC+M,GAAc9D,SAChC,OAAOjJ,GAGE0J,GACX,WAAqD,IAApD1J,EAAmD,uDAAlC+M,GAAcrD,OAC9B,OAAO1J,G,+NCtBIgN,iC,2VAAgB,IAAKC,I,6jBCEpC,IAAMF,GAAmC,CACvC7M,SAAU,CACRgC,YAAY,EACZoK,SAAS,GAGX7L,QAAS,GAETH,OAAQnD,EAAe2D,MAEvBV,QAAS,CACPY,UAAW,CACTwH,UAAW5D,EAAa,GACxBpD,SAAUoD,EAAa,KAI3B/C,WAAY,CACVC,OAAQ,EACRC,MAAO,ICpBIiL,6BAAgB,CAC7BvM,QDwDqB,WAA0E,IAAzET,EAAwE,uDAAhE+M,GAActM,QAAkD,yCAAvCjD,EAAuC,EAAvCA,KAAMyH,EAAiC,EAAjCA,QAC7D,OAAQzH,GACN,KAAKuG,EAAaC,aAAaC,QAAQC,IACrC,MAAM,GAAN,mBAAWlE,GAAX,YAAqBiF,IAGvB,KAAKlB,EAAaC,aAAaC,QAAQE,MACrC,OAAO4I,GAActM,QAGvB,QACE,OAAOT,IClEXE,SDsEsB,WAA+E,IAA9EF,EAA6E,uDAArE+M,GAAc7M,SAAuD,yCAA3C1C,EAA2C,EAA3CA,KAAMyH,EAAqC,EAArCA,QAC/D,OAAQzH,GACN,KAAKuG,EAAaC,aAAaI,SAASC,YACtC,OAAO,MACFrE,EADL,CAEEkC,WAAY+C,IAIhB,KAAKlB,EAAaC,aAAaI,SAASE,SACtC,OAAO,MACFtE,EADL,CAEEsM,QAASrH,IAIb,QACE,OAAOjF,ICtFXM,OD8CoB,WAAqE,IAApEN,EAAmE,uDAA3D+M,GAAczM,OAA6C,yCAAnC9C,EAAmC,EAAnCA,KAAMyH,EAA6B,EAA7BA,QAC3D,OAAIzH,IAASuG,EAAaC,aAAaW,QAC9BM,EAEAjF,GCjDT6B,WDyFwB,WAAoD,IAAnD7B,EAAkD,uDAA1C+M,GAAclL,WAC/C,OAAO7B,GCzFPI,QAAS4M,0BAAgB,CAAEhM,UDmBJ,WAAyF,IAAxFhB,EAAuF,uDAA/E+M,GAAc3M,QAAQY,UAAyD,yCAA5CxD,EAA4C,EAA5CA,KAAMyH,EAAsC,EAAtCA,QACzE,OAAQzH,GACN,KAAKuG,EAAaC,aAAaO,QAAQC,UAAUC,qBAC/C,OAAO,MACFzE,EADL,CAEEwB,SAAUyD,IAId,KAAKlB,EAAaC,aAAaO,QAAQC,UAAUE,sBAAwB,IAEnElD,EAAwBxB,EAAxBwB,SAAUgH,EAAcxI,EAAdwI,UACZ0E,EAAuB1L,EAAStD,SAAWsK,EAAUtK,OAEvD,MAAO,CACLsD,SAAU0L,EAAoB,YAAOjI,GAAWzD,EAChDgH,UAAWvD,GAIf,QACE,OAAOjF,QEtCEgN,6BAAgB,CAC7BxD,UACAvJ,iBCNAkN,GAA4B,CAACC,MAO/B,IAAIC,GAAWC,kBAAe,WAAf,EAAmBH,IAMnBE,I,GAAAA,MAASE,cAATF,CAAsBJ,I,SCiBtB,IACbhN,YApCkB,CAClBuN,MAAI,qBACDrQ,EAAe2D,MAAQ,6EADtB,eAED3D,EAAeuC,SAAW,6EAFzB,IAKJsB,UAAW,CACTyG,MAAO,sHACPgG,IAAK,qBACLC,UAAW,4EACXC,QAAS,mEACTC,QAAS,mEACTC,QAAS,qEAyBXpN,QAPc,CACdf,SAAU,kCACVmM,SAAU,uVAMViC,OAtBa,CACbC,KAAM,CACJC,UAAW,SACXC,WAAY,SACZC,aAAc,UAGhBlC,OAAQ,kFAgBRmC,eAbqB,CACrBC,MAAO,mGCLM,O,+FAnBR1E,GACH2E,KACGC,IAAIC,MACJC,KAAK,CACJC,UAAW,CACT,QAAS,CACPC,YAAaC,KAGjBC,IAAKlF,EACLmF,YAAa,QAEbC,cAAe,CACbC,aAAa,S,MCTR,I,MAAA,I,oGALHrF,GACRuB,KAAOvB,OAAOA,O,OCUH8E,GAJF,SAACxO,IANK,SAACA,GAClB,IAAM0J,EAASD,GAAUzJ,GACzBgP,GAAmBR,KAAK/E,GAAUzJ,IAClCiP,GAAcC,UAAUxF,GAIxByF,CAAWnP,ICAOoP,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTJ,IACEC,GAAS,WACPC,IAASD,OACP,kBAAC,IAAD,CAAUE,MAAOA,IACf,kBAAC,GAAD,OAEFC,SAASC,eAAe,UAG9BrB,GAAKmB,GAAMG,YACXH,GAAMI,UAAUN,IAEhBA,KDoHM,kBAAmBO,WACrBA,UAAUC,cAAcC,MAAMzK,MAAK,SAAA0K,GACjCA,EAAaC,kB","file":"static/js/main.ccfbf582.chunk.js","sourcesContent":["import { IActionBase, IFetchingStatuses, IPagination } from '../types'\n\nexport interface IBaseTicketSegment {\n  // Код города (iata)\n  origin: string\n  // Код города (iata)\n  destination: string\n  // Дата и время вылета туда\n  date: string\n  // Массив кодов (iata) городов с пересадками\n  stops: string[]\n  // Общее время перелёта в минутах\n  duration: number\n}\n\nexport interface IBaseTicket<S> {\n  // Цена в рублях\n  price: number\n  // Код авиакомпании (iata)\n  carrier: string\n  // Массив перелётов.\n  // В тестовом задании это всегда поиск \"туда-обратно\" значит состоит из двух элементов\n  segments: S[]\n}\n\nexport interface ITicketSegment extends IBaseTicketSegment {\n  id: string\n}\n\nexport interface ITicket extends IBaseTicket<ITicketSegment> {\n  id: string\n}\n\nexport interface ITicketFiltersTransfer {\n  available: number[]\n  selected: number[]\n}\n\nexport interface ITicketFilters {\n  transfers: ITicketFiltersTransfer\n}\n\nexport enum ETicketsSortBy {price, duration}\n\nexport interface IFindTicketsState {\n  tickets: ITicket[]\n  statuses: IFetchingStatuses\n  sortBy: ETicketsSortBy\n  filters: ITicketFilters\n  pagination: IPagination\n}\n\n/** tickets section */\nexport type TActionAddTickets = IActionBase<ITicket[]>\n\n/** sort section */\nexport type TActionSortBy = IActionBase<ETicketsSortBy>\n\n/** filters section */\nexport type TActionFilterTransfers = IActionBase<number[]>\n\n","export const makeBEMModifier = (base: string, modifier: string): string =>\n  `${base}--${modifier}`\n\nexport interface IBEMProps {\n  isLoading?: boolean\n  isDisabled?: boolean\n  isActive?: boolean\n  modifiers?: string[]\n  mix?: string\n}\n\nexport const makeBemClassNames = (\n  baseClass: string,\n  { isLoading, isActive, isDisabled, modifiers = [] }: IBEMProps\n): string => {\n  const result = [baseClass]\n\n  if (isLoading) result.push('is-loading')\n  if (isDisabled) result.push('is-disabled')\n  if (isActive) result.push('is-active')\n\n  if (baseClass && modifiers.length) {\n    const makeModifier = makeBEMModifier.bind(null, baseClass)\n\n    result.push(...modifiers.map(makeModifier))\n  }\n\n  return result.join(' ')\n}\n","import React from 'react'\nimport './Button.scss'\nimport { makeBemClassNames } from '../../../../helpers/bem'\n\ninterface ButtonClassProps {\n  type?: string\n  isLoading?: boolean\n  isDisabled?: boolean\n  size?: string\n  block?: boolean\n}\n\ninterface IProps extends ButtonClassProps {\n  text?: string\n  div?: boolean\n  a?: boolean\n  href?: string\n  target?: string\n  onClick?: (e: React.MouseEvent) => any\n}\n\nconst BASE_CLASS_NAME = 'btn'\n\nconst Button: React.FC<IProps> =\n  ({ div, a, type = 'primary', size, isLoading, isDisabled, block, text, children, ...props }) => {\n    const\n      className = getButtonClassName({ type, size, isLoading, isDisabled, block }),\n      Tag = div ? 'div' : a ? 'a' : 'button'\n\n    return (\n      <Tag className={className} {...props}>\n        {text}\n        {children}\n      </Tag>\n    )\n  }\n\nconst getButtonClassName = ({ type, size, isLoading, block, isDisabled }: ButtonClassProps) => {\n  const modifiers = []\n\n  if (type) modifiers.push(type)\n  if (size) modifiers.push(size)\n  if (block) modifiers.push('block')\n\n  return makeBemClassNames(BASE_CLASS_NAME, { isLoading, isDisabled, modifiers },)\n}\n\nexport default Button\n","import React from 'react'\nimport './DoNotTouchThis.scss'\nimport Button from '../../components/ui/forms/Button'\nimport { Link } from 'react-router-dom'\n\nconst WTF: React.FC = () => {\n  console.log('render')\n\n  return (\n    <div className='do-not-touch-this'>\n      <div className='do-not-touch__d'></div>\n      <div className='do-not-touch__o'></div>\n      <div className='do-not-touch__n'></div>\n      <div className='do-not-touch__o'></div>\n      <div className='do-not-touch__t'></div>\n      <div className='do-not-touch__t'></div>\n      <div className='do-not-touch__o'></div>\n      <div className='do-not-touch__u'>\n        <Link to='/' className='yo-btn-wrap'>\n          <Button size='lg' div type='secondary'>Уйти</Button>\n        </Link>\n      </div>\n      <div className='do-not-touch__c'></div>\n      <div className='do-not-touch__h'></div>\n      <div className='do-not-touch__t'></div>\n      <div className='do-not-touch__h'></div>\n      <div className='do-not-touch__i'></div>\n      <div className='do-not-touch__s'></div>\n    </div>\n  )\n}\n\nexport default WTF\n","import React from 'react'\nimport './PlaneLogo.scss'\nimport { motion } from 'framer-motion'\n\nexport interface IProps {\n  animated: boolean\n}\n\nconst PlaneLogo: React.FC<IProps> = ({ animated = false }) => {\n  return (\n    <div className='plane-logo'>\n      <motion.div\n        className='plane-logo__earth'\n        animate={\n          animated ? {\n            scale: [1, 1.1, 1, 1.1, 1], rotate: [0, 180],\n          } : {\n            scale: 1, rotate: 0\n          }\n        }\n        transition={\n          animated ? {\n            duration: 2, loop: Infinity\n          } : {\n            duration: .5, loop: 0\n          }\n        }\n      />\n\n      <div className='plane-logo__plane-wrap'>\n        <motion.div\n          className='plane-logo__plane'\n          animate={\n            animated ? {\n              scale: [1, .8, .8, 1], rotate: [0, -1, 0, -1, 0], x: [0, -1, 0, 1, 0], y: [0, 1, 0, -1, 0]\n            } : {\n              scale: 1, rotate: 0, x: 0, y: 0\n            }\n          }\n          transition={\n            animated ? {\n              duration: 4, loop: Infinity\n            } : {\n              duration: .5, loop: 0\n            }\n          }\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default PlaneLogo\n\n","import { createSelector } from 'reselect'\nimport { sortBy as _sortBy } from 'lodash'\nimport { IState } from '../rootReducer'\nimport { ETicketsSortBy, ITicket, ITicketFilters, ITicketSegment } from './types'\nimport { IFetchingStatuses, IPagination } from '../types'\n\n/** simple selectors */\nexport const getFetchingStatuses = (state: IState): IFetchingStatuses => state.findTickets.statuses\nexport const getFilters = (state: IState): ITicketFilters => state.findTickets.filters\nexport const getSortBy = (state: IState): number => state.findTickets.sortBy\nexport const getPagination = (state: IState): IPagination => state.findTickets.pagination\nexport const getAllTicketsList = (state: IState): ITicket[] => state.findTickets.tickets\n\n/** reselect */\nexport const getTicketsListSorted = createSelector<IState, ITicket[], ETicketsSortBy, ITicket[]>(\n  getAllTicketsList,\n  getSortBy,\n  (tickets, sortBy) => {\n    if (sortBy === ETicketsSortBy.duration) {\n\n      return _sortBy(tickets, (ticket) => accumulateDuration(ticket.segments))\n\n    } else if (sortBy === ETicketsSortBy.price) {\n\n      return _sortBy(tickets, ({ price }) => price)\n\n    } else {\n      return tickets\n    }\n  }\n)\n\nexport const getTicketsListFiltered = createSelector<IState, ITicket[], ITicketFilters, ITicket[]>(\n  getTicketsListSorted,\n  getFilters,\n  (tickets, { transfers }) => {\n    const getTransfersCounts = (ticket: ITicket): number[] => ticket.segments.map(({ stops }) => stops.length)\n\n    return tickets.filter(ticket => {\n      const allStops = getTransfersCounts(ticket)\n\n      let count = 0\n\n      allStops.forEach(stopCount => transfers.selected.includes(stopCount) && count++)\n\n      return count === allStops.length\n    })\n  })\n\n\nconst accumulateDuration = (segments: ITicketSegment[]): number => {\n  return segments.reduce((accumulate, { duration }) => accumulate + duration, 0)\n}\n\n\nexport const getFinalTicketList = createSelector<IState, ITicket[], IPagination, ITicket[]>(\n  getTicketsListFiltered,\n  getPagination,\n  (tickets, { offset, limit }) => tickets.slice(offset, offset + limit)\n)\n","import { connect } from 'react-redux'\nimport PlaneLogo, { IProps } from '../../../components/PlaneLogo/PlaneLogo'\nimport { IState } from '../../../store/rootReducer'\nimport { getFetchingStatuses } from '../../../store/findTickets/selectors'\n\ntype TStateProps = IProps;\n\nconst mapStateToProps = (state: IState): TStateProps => ({\n  animated: getFetchingStatuses(state).isFetching,\n})\n\nexport default connect(mapStateToProps)(PlaneLogo)\n","import React from 'react'\nimport './Layout.scss'\n\ninterface IProps {\n  Sidebar?: React.ComponentType\n}\n\nconst Layout: React.FC<IProps> = ({ Sidebar, children }) => (\n  <div className='layout'>\n    {Sidebar && (\n      <div className='layout__sidebar'>\n        <Sidebar/>\n      </div>\n    )}\n\n    <div className='layout__main'>\n      {children}\n    </div>\n  </div>\n)\n\nexport default Layout\n","const config = {\n  base: 'https://front-test.beta.aviasales.ru',\n\n  gateWays: {\n    searchKey: '/search',\n    tickets: '/tickets',\n  }\n}\n\nexport default config\n","export const fetchJSON = async (path: string) => {\n  const response = await fetch(path)\n\n  if (response.ok) {\n    return response.json()\n  } else {\n    const\n      status = response.status,\n      text = await response.text()\n\n    return Promise.reject(`${status}: ${text}`)\n  }\n}\n","import { IRawTicket, IRawTicketSegment } from '../api/types'\nimport { ITicket, ITicketSegment } from '../store/findTickets/types'\nimport { v4 } from 'uuid'\n\nexport const normalizeTicket = (ticket: IRawTicket): ITicket => {\n  const { segments, ...rest } = ticket\n\n  return {\n    id: v4(),\n    segments: ticket.segments.map(normalizeTicketSegment),\n    ...rest\n  }\n}\n\nexport const normalizeTicketSegment = (segment: IRawTicketSegment): ITicketSegment => ({\n  id: v4(),\n  ...segment,\n})\n","import config from './config'\nimport { fetchJSON } from '../helpers/fetch'\nimport { normalizeTicket } from '../normalizers/ticketNormalizers'\n\nconst\n  KEY_PATH = config.base + config.gateWays.searchKey,\n  TICKETS_PATH = config.base + config.gateWays.tickets\n\nconst\n  fetchTicketsSearchId = async (): Promise<string> => {\n    const { searchId } = await fetchJSON(KEY_PATH)\n\n    return searchId\n  }\n\nexport const fetchTickets = async () => {\n  const\n    searchId = await fetchTicketsSearchId(),\n    tickets = [],\n    path = `${TICKETS_PATH}?searchId=${searchId}`\n\n  let stop = false\n\n  while (!stop) try {\n    const\n      result = await fetchJSON(path),\n      rawTickets = result.tickets\n\n    tickets.push(...rawTickets.map(normalizeTicket))\n    stop = result.stop\n  } catch (error) {\n    console.warn(error)\n  }\n\n  return tickets\n}\n\nexport const getImage = (carrierCode: string) => `//pics.avs.io/99/36/${carrierCode}.png`\n","const FIND_TICKETS_TYPES = {\n  /** tickets */\n  TICKETS: {\n    ADD: 'FIND_TICKETS.TICKETS.ADD',\n    CLEAR: 'FIND_TICKETS.TICKETS.CLEAR'\n  },\n\n  /** statuses */\n  STATUSES: {\n    IS_FETCHING: 'FIND_TICKETS.STATUSES.IS_FETCHING',\n    IS_ERROR: 'FIND_TICKETS.STATUSES.IS_ERROR',\n  },\n\n  /** filters */\n  FILTERS: {\n    TRANSFERS: {\n      SET_SELECTED_OPTIONS: 'FIND_TICKETS.FILTERS.TRANSFERS.SET_SELECTED_OPTIONS',\n      SET_AVAILABLE_OPTIONS: 'FIND_TICKETS.FILTERS.TRANSFERS.SET_AVAILABLE_OPTIONS'\n    }\n  },\n\n  /** sort */\n  SORT_BY: 'FIND_TICKETS.SORT_BY',\n}\n\nconst ACTION_TYPES = {\n  FIND_TICKETS: FIND_TICKETS_TYPES\n}\n\nexport default ACTION_TYPES\n","export const orderedArray = (count: number): number[] => Array.from(Array(count).keys())\n\nexport const toggleInArray = <T>(array: T[], item: T): T[] => {\n  return array.includes(item) ? array.filter(a => item !== a) : [...array, item]\n}\n","import { Dispatch } from 'react'\nimport { fetchTickets as apiFetchTickets } from '../../api/ticketApi'\nimport ACTION_TYPES from '../actionTypes'\nimport { TActionFetchingStatus, TActionWithOnlyType, TAppAnyAction } from '../types'\nimport { ETicketsSortBy, ITicket, TActionAddTickets, TActionFilterTransfers, TActionSortBy } from './types'\nimport { orderedArray } from '../../helpers/misc'\n\nconst setFetchingStatus = (status: boolean): TActionFetchingStatus => ({\n  type: ACTION_TYPES.FIND_TICKETS.STATUSES.IS_FETCHING,\n  payload: status,\n})\n\nconst setFetchingErrorStatus = (status: boolean): TActionFetchingStatus => ({\n  type: ACTION_TYPES.FIND_TICKETS.STATUSES.IS_ERROR,\n  payload: status,\n})\n\nconst addTickets = (tickets: ITicket[]): TActionAddTickets => ({\n  type: ACTION_TYPES.FIND_TICKETS.TICKETS.ADD,\n  payload: tickets,\n})\n\nexport const clearTickets = (): TActionWithOnlyType => ({\n  type: ACTION_TYPES.FIND_TICKETS.TICKETS.CLEAR\n})\n\nexport const selectSortBy = (sortBy: ETicketsSortBy): TActionSortBy => ({\n  type: ACTION_TYPES.FIND_TICKETS.SORT_BY,\n  payload: sortBy,\n})\n\nexport const setAvailableOptions = (options: number[]): TActionFilterTransfers => ({\n  type: ACTION_TYPES.FIND_TICKETS.FILTERS.TRANSFERS.SET_AVAILABLE_OPTIONS,\n  payload: options,\n})\n\nexport const setSelectedOptions = (options: number[]): TActionFilterTransfers => ({\n  type: ACTION_TYPES.FIND_TICKETS.FILTERS.TRANSFERS.SET_SELECTED_OPTIONS,\n  payload: options\n})\n\nconst getAvailableOptions = (tickets: ITicket[]): number[] => {\n  let count = 0\n\n  tickets.forEach(ticket => ticket.segments.forEach(({ stops }) => count = Math.max(count, stops.length)))\n\n  return orderedArray(count)\n}\n\nexport const fetchTickets = () => (dispatch: Dispatch<TAppAnyAction>) => {\n  dispatch(setFetchingErrorStatus(false))\n  dispatch(setFetchingStatus(true))\n\n  apiFetchTickets()\n    .then(\n      tickets => {\n        dispatch(addTickets(tickets))\n        dispatch(setAvailableOptions(getAvailableOptions(tickets)))\n      })\n    .catch(() => {\n      dispatch(setFetchingErrorStatus(true))\n    })\n    .finally(() => {\n      dispatch(setFetchingStatus(false))\n    })\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M4.28571 8L0 4.16123L1.20857 3.0787L4.28571 5.82726L10.7914 0L12 1.09021L4.28571 8Z\"\n});\n\nvar SvgCheck = function SvgCheck(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 8,\n    viewBox: \"0 0 12 8\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgCheck, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/check.b73f59a3.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport { ReactComponent as ICheck } from '../../../../assets/icons/check.svg'\nimport './Checkbox.scss'\n\ninterface IProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  type?: string\n\n  onChange(value: boolean): void\n}\n\nconst Checkbox: React.FC<IProps> = ({ children, onChange, type = 'checkbox', ...rest }) => {\n  return (\n    <label className='checkbox'>\n      <input type={type} onChange={e => onChange(e.target.checked)} {...rest} />\n      <span className='checkbox__icon'><ICheck/></span>\n\n      <span className='checkbox__label'>\n        {children}\n      </span>\n    </label>\n  )\n}\n\nexport default Checkbox\n","import React from 'react'\nimport './FiltersSection.scss'\n\ninterface IProps {\n  title: string\n}\n\nconst FiltersSection: React.FC<IProps> = ({ title, children }) => (\n  <div className='filters-section'>\n    <div className='filters-section__title'>\n      {title}\n    </div>\n    <div className='filters-section__body'>\n      {children}\n    </div>\n  </div>\n)\n\nexport default FiltersSection\n","import React from 'react'\nimport Checkbox from '../../../components/ui/forms/Checkbox'\nimport FiltersSection from '../../../components/ui/forms/FiltersSection'\nimport { useTranslation } from 'react-i18next'\nimport { ITicketFilters, TActionFilterTransfers } from '../../../store/findTickets/types'\nimport { toggleInArray } from '../../../helpers/misc'\n\nexport interface IProps {\n  setSelectedOptions: (options: number[]) => TActionFilterTransfers,\n  filters: ITicketFilters\n}\n\nconst Sidebar: React.FC<IProps> = ({ setSelectedOptions, filters }) => {\n  const\n    [t] = useTranslation(),\n    { selected, available } = filters.transfers,\n    isAllSelected = available.length === selected.length,\n\n    onToggleAll = () => {\n      if (selected.length && isAllSelected) {\n        setSelectedOptions([])\n      } else {\n        setSelectedOptions([...available])\n      }\n    },\n\n    onToggle = (option: number) => {\n      setSelectedOptions(toggleInArray(selected, option))\n    }\n\n  return (\n    <FiltersSection title='Количество пересадок'>\n      <Checkbox\n        checked={isAllSelected}\n        onChange={onToggleAll}\n      >\n        {t('findTickets.transfers.all')}\n      </Checkbox>\n\n      {\n        available.map(option => (\n          <Checkbox\n            key={option}\n            checked={selected.includes(option)}\n            onChange={() => onToggle(option)}\n          >\n            {t(`findTickets.transfers.label${option === 0 ? 'Zero' : ''}`, { count: option })}\n          </Checkbox>\n        ))\n      }\n    </FiltersSection>\n  )\n}\n\nexport default Sidebar\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { IState } from '../../../store/rootReducer'\nimport { TAppAnyAction } from '../../../store/types'\nimport { getFilters } from '../../../store/findTickets/selectors'\nimport { setSelectedOptions } from '../../../store/findTickets/actions'\nimport Sidebar, { IProps } from './Sidebar'\n\ntype TStateProps = Pick<IProps, 'filters'>;\ntype TDispatchProps = Pick<IProps, 'setSelectedOptions'>\n\nconst mapStateToProps = (state: IState): TStateProps => ({\n  filters: getFilters(state)\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IState, {}, TAppAnyAction>): TDispatchProps => ({\n  setSelectedOptions: bindActionCreators(setSelectedOptions, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar)\n","import React from 'react'\nimport { TCurrency } from '../../../../store/common/types'\n\nexport interface IProps {\n  value: number\n  currency: TCurrency\n}\n\nconst format = (value: number): string => value.toLocaleString()\n\nconst Price: React.FC<IProps> = ({ value, currency }) => {\n  const\n    formatted = format(value),\n    symbol = currency.symbol\n\n  if (currency.name === 'USD') return (\n    <>{`${symbol}${formatted}`}</>\n  )\n\n  return (\n    <>{`${formatted} ${symbol}`}</>\n  )\n}\n\nexport default Price\n","import { TCurrency, TLocale } from './types'\nimport { IState } from '../rootReducer'\n\nexport const getCurrency = (state: IState): TCurrency => state.common.currency\nexport const getLocale = (state: IState): TLocale => state.common.locale\n","import { connect } from 'react-redux'\nimport Price from './Price'\nimport { getCurrency } from '../../../../store/common/selectors'\nimport { IState } from '../../../../store/rootReducer'\n\nconst mapStateToProps = (state: IState) => ({\n  currency: getCurrency(state)\n})\n\nexport default connect(mapStateToProps)(Price)\n","export const formatFromTo = (arr: Array<string | number>): string => arr.join(' - ')\n\nexport type TDurationParsed = {\n  days?: number\n  hours?: number\n  minutes?: number\n}\n\nexport const formatDurationInHours = (hours: number): TDurationParsed => {\n  const\n    restHours = hours % 24,\n    days = (hours - restHours) / 24\n\n  return {\n    days,\n    hours: restHours,\n  }\n}\n\nexport const formatDurationFromMinutes = (minutes: number): TDurationParsed => {\n  const\n    restMinutes = minutes % 60,\n    hours = (minutes - restMinutes) / 60\n\n  return {\n    ...formatDurationInHours(hours),\n    minutes: restMinutes,\n  }\n}\n","import React from 'react'\nimport { formatDurationFromMinutes, TDurationParsed } from '../../../../helpers/formatters'\nimport { useTranslation } from 'react-i18next'\n\ninterface IProps {\n  from?: string,\n  duration: number\n}\n\ninterface IFormatArgs {\n  duration: number,\n  from?: string,\n  t: (key: string) => string\n}\n\nconst\n  format = ({ duration, t }: IFormatArgs): string => {\n    //todo: add another formatter according to the 'from' attribute\n    let formatter = formatDurationFromMinutes\n\n    const\n      { days, hours, minutes }: TDurationParsed = formatter(duration),\n      result: string[] = []\n\n    if (days) {\n      result.push(`${days}${t('labels.time.daysShort')}`)\n    }\n\n    if (hours) {\n      result.push(`${hours}${t('labels.time.hoursShort')}`)\n    }\n\n    if (minutes) {\n      result.push(`${minutes}${t('labels.time.minutesShort')}`)\n    }\n\n    return result.join(' ')\n  }\n\nconst Duration: React.FC<IProps> = ({ from = 'minutes', duration }) => {\n  const [t] = useTranslation()\n\n  return <>{format({ duration, t, from })}</>\n}\n\nexport default Duration\n","import React from 'react'\nimport { LazyLoadImage } from 'react-lazy-load-image-component'\nimport moment from 'moment'\n\nimport './Ticket.scss'\nimport Price from '../ui/common/Price'\nimport { useTranslation } from 'react-i18next'\nimport { ITicket } from '../../store/findTickets/types'\nimport { getImage } from '../../api/ticketApi'\nimport { formatFromTo } from '../../helpers/formatters'\nimport Duration from '../ui/common/Duration'\n\ninterface IProps {\n  ticket: ITicket\n}\n\nconst\n  getRangeFromDateAndDuration = (date: string, duration: number): string => formatFromTo([\n    moment(date).format('LT'),\n    moment(date).add(duration, 'minutes').format('LT'),\n  ])\n\nconst Ticket: React.FC<IProps> = ({ ticket }) => {\n  const\n    [t] = useTranslation()\n\n  return (\n    <div className='ticket'>\n      <div className='ticket__header'>\n        <div className='ticket__row'>\n          <div className='ticket__col'>\n            <div className='ticket-price'><Price value={ticket.price}/></div>\n          </div>\n          <div className='ticket__col'>\n            <div className='ticket-company-logo'>\n              <LazyLoadImage\n                alt=''\n                src={getImage(ticket.carrier)} // use normal <img> attributes as props\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='ticket__body'>\n        <div className='ticket-segments'>\n          {ticket.segments.map(({ id, date, destination, duration, origin, stops }) => (\n            <div className='ticket__row' key={id}>\n              <div className='ticket__col'>\n                <SegmentItem label={formatFromTo([origin, destination])}>\n                  {getRangeFromDateAndDuration(date, duration)}\n                </SegmentItem>\n              </div>\n              <div className='ticket__col'>\n                <SegmentItem label={t('tickets.duration')}>\n                  <Duration duration={duration}/>\n                </SegmentItem>\n              </div>\n              <div className='ticket__col'>\n                {!stops.length ? (\n                  <SegmentItem label={t('findTickets.transfers.labelZero')}/>\n                ) : (\n                  <SegmentItem label={t('findTickets.transfers.label', { count: stops.length })}>\n                    {formatFromTo(stops)}\n                  </SegmentItem>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\ninterface ISegmentProps {\n  label: string\n}\n\nconst SegmentItem: React.FC<ISegmentProps> = ({ label, children }) => (\n  <div className='ticket-segment-item'>\n    <div className='ticket-segment-item__label'>{label}</div>\n    <div className='ticket-segment-item__value'>{children}</div>\n  </div>\n)\n\nconst TLoading: React.FC = () => <div className='ticket-loading animated-background-loading'/>\n\nexport const TicketLoading: React.FC = () => (\n  <div className='ticket'>\n    <div className='ticket__header'>\n      <div className='ticket__row'>\n        <div className='ticket__col'><TLoading/></div>\n        <div className='ticket__col'><TLoading/></div>\n      </div>\n    </div>\n    <div className='ticket__body'>\n      <div className='ticket-segments'>\n        <div className='ticket__row'>\n          <div className='ticket__col'><TLoading/><TLoading/></div>\n          <div className='ticket__col'><TLoading/><TLoading/></div>\n          <div className='ticket__col'><TLoading/><TLoading/></div>\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Ticket\n","import React from 'react'\nimport { motion } from 'framer-motion'\n\ninterface IProps {\n  className?: string\n  duration?: number\n  initialX?: number\n}\n\nconst FadeIn: React.FC<IProps> = ({ duration = .2, children, className, initialX }) => {\n  const additional = {\n    x: [initialX || 0, 0]\n  }\n\n  return (\n    <motion.div\n      animate={{ opacity: [0, 1], ...additional }}\n      initial={{ opacity: 0 }}\n      transition={{ duration }}\n      className={className}\n    >\n      {children}\n    </motion.div>\n  )\n}\n\nexport default FadeIn\n","import React from 'react'\nimport Ticket, { TicketLoading } from '../../../components/Ticket/Ticket'\nimport FadeIn from '../../../components/ui/common/FadeIn'\nimport { useTranslation } from 'react-i18next'\nimport { ITicket } from '../../../store/findTickets/types'\nimport { IFetchingStatuses } from '../../../store/types'\n\nexport interface IProps {\n  statuses: IFetchingStatuses,\n  tickets: ITicket[]\n}\n\nconst TicketsList: React.FC<Omit<IProps, 'isError'>> = ({ statuses, tickets }) => {\n  const\n    list = tickets.map(ticket => (\n      <div className='tickets-list__item' key={ticket.id}>\n        <FadeIn initialX={8} duration={.2}>\n          <Ticket ticket={ticket}/>\n        </FadeIn>\n      </div>\n    )),\n    notFound = !tickets.length && !statuses.isFetching && (\n      <div className='tickets-list__item'>\n        <TicketsNotFound/>\n      </div>\n    )\n\n\n  return (\n    <div className='tickets-list'>\n      {statuses.isFetching && (\n        <Loading/>\n      )}\n      {list}\n      {notFound}\n    </div>\n  )\n}\n\nconst Loading: React.FC = () => (\n  <>\n    <div className='tickets-list__item'><TicketLoading/></div>\n    <div className='tickets-list__item'><TicketLoading/></div>\n    <div className='tickets-list__item'><TicketLoading/></div>\n  </>\n)\n\nconst TicketsNotFound: React.FC = () => {\n  const [t] = useTranslation()\n\n  return (\n    <div className='tickets-list-not-found'>\n      {t('tickets.notFound')}\n    </div>\n  )\n}\n\nexport default TicketsList\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport './Error.scss'\n\nconst Error: React.FC = ({ children }) => {\n  const [t] = useTranslation()\n  return (\n    <div className='error'>\n      <div className=\"error__message\">\n        {t('commonMessages.error')}\n      </div>\n\n      {children && (\n        <div className=\"error__body\">\n          {children}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Error\n","import React from 'react'\nimport { IFetchingStatuses } from '../store/types'\nimport Error from '../components/ui/common/Error'\nimport Button from '../components/ui/forms/Button'\nimport { useTranslation } from 'react-i18next'\n\nexport interface IWithData {\n  fetch: () => any\n  reset: () => any,\n  statuses: IFetchingStatuses\n}\n\nconst withData = <P extends object>(Component: React.ComponentType<P>) =>\n  class WithLoading extends React.Component<P & IWithData> {\n    componentDidMount(): void {\n      this.props.fetch()\n    }\n\n    componentWillUnmount(): void {\n      this.props.reset()\n    }\n\n    render() {\n      const\n        { fetch, reset, statuses, ...props } = this.props,\n        childProps = { statuses, ...props }\n\n      return (\n        <>\n          {statuses.isError ? (\n            <Reload reload={fetch}/>\n          ) : (\n            <Component {...childProps as P} />\n          )}\n        </>\n      )\n    }\n  }\n\ninterface IReloadProps {\n  reload: () => any\n}\n\nconst Reload: React.FC<IReloadProps> = ({ reload }) => {\n  const [t] = useTranslation()\n\n  return (\n    <Error>\n      <Button onClick={reload}>\n        {t('labels.reload')}\n      </Button>\n    </Error>\n  )\n}\n\nexport default withData\n","import { bindActionCreators } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { connect } from 'react-redux'\nimport TicketsList, { IProps } from './TicketsList'\nimport { IState } from '../../../store/rootReducer'\nimport { clearTickets, fetchTickets } from '../../../store/findTickets/actions'\nimport { TAppAnyAction } from '../../../store/types'\nimport { getFetchingStatuses, getFinalTicketList } from '../../../store/findTickets/selectors'\nimport withData from '../../../hoc'\nimport { IWithData } from '../../../hoc/withData'\n\ntype TStateProps = IProps;\ntype TDispatchProps = Pick<IWithData, 'fetch' | 'reset'>\n\nconst mapStateToProps = (state: IState): TStateProps => ({\n  statuses: getFetchingStatuses(state),\n  tickets: getFinalTicketList(state),\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IState, {}, TAppAnyAction>): TDispatchProps => ({\n  fetch: bindActionCreators(fetchTickets, dispatch),\n  reset: bindActionCreators(clearTickets, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withData(TicketsList))\n","import React from 'react'\nimport './ButtonGroup.scss'\n\nconst ButtonGroup: React.FC = ({ children }) => <div className='button-group'>{children}</div>\n\nexport default ButtonGroup\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport Button from '../../../components/ui/forms/Button'\nimport ButtonGroup from '../../../components/ui/forms/ButtonGroup'\nimport { ETicketsSortBy, TActionSortBy } from '../../../store/findTickets/types'\n\nexport interface IProps {\n  sortBy: ETicketsSortBy,\n  selectSortBy: (count: ETicketsSortBy) => TActionSortBy\n}\n\nconst sortByVariants = [ETicketsSortBy.price, ETicketsSortBy.duration]\n\nconst SortTabs: React.FC<IProps> = ({ sortBy, selectSortBy }) => {\n  const [t] = useTranslation()\n\n  return (\n    <ButtonGroup>\n      {\n        sortByVariants.map(variant => {\n          const isActive = sortBy === variant\n\n          return (\n            <Button\n              div\n              key={variant}\n              type={isActive ? 'primary' : 'secondary'}\n              size='lg'\n              onClick={() => !isActive && selectSortBy(variant)}\n            >\n              {t(`findTickets.tabs.${variant}`)}\n            </Button>\n          )\n        })\n      }\n    </ButtonGroup>\n  )\n}\n\nexport default SortTabs\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { IState } from '../../../store/rootReducer'\nimport { getSortBy } from '../../../store/findTickets/selectors'\nimport { TAppAnyAction } from '../../../store/types'\nimport { selectSortBy } from '../../../store/findTickets/actions'\nimport SortTabs, { IProps } from './SortTabs'\n\ntype TStateProps = Pick<IProps, 'sortBy'>;\ntype TDispatchProps = Pick<IProps, 'selectSortBy'>\n\nconst mapStateToProps = (state: IState): TStateProps => ({\n  sortBy: getSortBy(state)\n})\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<IState, {}, TAppAnyAction>): TDispatchProps => ({\n  selectSortBy: bindActionCreators(selectSortBy, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortTabs)\n","import React from 'react'\nimport './FindTickets.scss'\nimport PlaneLogo from './PlaneLogo'\nimport Layout from '../../components/ui/Layout'\nimport Sidebar from './Sidebar'\nimport TicketsList from './TicketsList'\nimport Tabs from './SortTabs'\n\nconst FindTickets: React.FC = () => (\n  <div className='find-tickets'>\n    <div className='find-tickets__top'>\n      <PlaneLogo/>\n    </div>\n\n    <div className='find-tickets__body'>\n      <Layout Sidebar={\n        Sidebar\n      }>\n        <div className='find-tickets__row'>\n          <Tabs/>\n        </div>\n        <div className='find-tickets__row'>\n          <TicketsList/>\n        </div>\n      </Layout>\n    </div>\n  </div>\n)\n\nexport default FindTickets\n","import React from 'react'\nimport DoNotTouchThis from './pages/DoNotTouchThis'\nimport FindTickets from './pages/FindTickets'\n\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\n\nconst App: React.FC = () => (\n  <Router>\n    <Switch>\n      <Route exact path='/'>\n        <Redirect to='/find-tickets'/>\n      </Route>\n      <Route exact path='/find-tickets'>\n        <FindTickets/>\n      </Route>\n      <Route exact path='/o-privet'>\n        <DoNotTouchThis/>\n      </Route>\n      <Route path='*'>\n        <Redirect to='/o-privet'/>\n      </Route>\n    </Switch>\n  </Router>\n)\n\nexport default App\n","import { ICommonState, TCurrency, TLocale } from './types'\n\nconst CURRENCIES = {\n  RUB: {\n    name: 'RUB',\n    symbol: 'Р'\n  },\n  USD: {\n    name: 'USD',\n    symbol: '$'\n  }\n}\n\nconst INITIAL_STATE: ICommonState = {\n  currency: CURRENCIES.RUB,\n  locale: 'ru-RU',\n}\n\nexport const currency =\n  (state: TCurrency = INITIAL_STATE.currency): TCurrency => {\n    return state\n  }\n\nexport const locale =\n  (state: TLocale = INITIAL_STATE.locale): TLocale => {\n    return state\n  }\n","import { combineReducers } from 'redux'\nimport * as reducers from './reducers'\n\nexport default combineReducers({ ...reducers })\n","import { ETicketsSortBy, IFindTicketsState, TActionAddTickets, TActionFilterTransfers, TActionSortBy } from './types'\nimport ACTION_TYPES from '../actionTypes'\nimport { IPagination, TActionFetchingStatus } from '../types'\nimport { orderedArray } from '../../helpers/misc'\n\nconst INITIAL_STATE: IFindTicketsState = {\n  statuses: {\n    isFetching: false,\n    isError: false,\n  },\n\n  tickets: [],\n\n  sortBy: ETicketsSortBy.price,\n\n  filters: {\n    transfers: {\n      available: orderedArray(2),\n      selected: orderedArray(2),\n    }\n  },\n\n  pagination: {\n    offset: 0,\n    limit: 5,\n  },\n}\n\nexport const transfers = (state = INITIAL_STATE.filters.transfers, { type, payload }: TActionFilterTransfers) => {\n  switch (type) {\n    case ACTION_TYPES.FIND_TICKETS.FILTERS.TRANSFERS.SET_SELECTED_OPTIONS: {\n      return {\n        ...state,\n        selected: payload,\n      }\n    }\n\n    case ACTION_TYPES.FIND_TICKETS.FILTERS.TRANSFERS.SET_AVAILABLE_OPTIONS: {\n      const\n        { selected, available } = state,\n        isAllOptionsSelected = selected.length === available.length\n\n      return {\n        selected: isAllOptionsSelected ? [...payload] : selected,\n        available: payload,\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport const sortBy = (state = INITIAL_STATE.sortBy, { type, payload }: TActionSortBy) => {\n  if (type === ACTION_TYPES.FIND_TICKETS.SORT_BY) {\n    return payload\n  } else {\n    return state\n  }\n}\n\nexport const tickets = (state = INITIAL_STATE.tickets, { type, payload }: TActionAddTickets) => {\n  switch (type) {\n    case ACTION_TYPES.FIND_TICKETS.TICKETS.ADD: {\n      return [...state, ...payload]\n    }\n\n    case ACTION_TYPES.FIND_TICKETS.TICKETS.CLEAR: {\n      return INITIAL_STATE.tickets\n    }\n\n    default:\n      return state\n  }\n}\n\nexport const statuses = (state = INITIAL_STATE.statuses, { type, payload }: TActionFetchingStatus) => {\n  switch (type) {\n    case ACTION_TYPES.FIND_TICKETS.STATUSES.IS_FETCHING: {\n      return {\n        ...state,\n        isFetching: payload,\n      }\n    }\n\n    case ACTION_TYPES.FIND_TICKETS.STATUSES.IS_ERROR: {\n      return {\n        ...state,\n        isError: payload,\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport const pagination = (state = INITIAL_STATE.pagination): IPagination => {\n  return state\n}\n","import { combineReducers } from 'redux'\nimport { pagination, sortBy, statuses, tickets, transfers } from './reducers'\n\n\nexport default combineReducers({\n  tickets,\n  statuses,\n  sortBy,\n  pagination,\n  filters: combineReducers({ transfers }),\n})\n","import { combineReducers } from 'redux'\nimport common from './common'\nimport findTickets from './findTickets'\nimport { ICommonState } from './common/types'\nimport { IFindTicketsState } from './findTickets/types'\n\nexport interface IState {\n  common: ICommonState,\n  findTickets: IFindTicketsState\n}\n\nexport default combineReducers({\n  common,\n  findTickets\n})\n","import { applyMiddleware, createStore, Middleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport * as reduxLogger from 'redux-logger'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport reducers from './rootReducer'\n\nconst\n  middlewares: Middleware[] = [thunk],\n  isDevMode = process.env.NODE_ENV === 'development'\n\nif (isDevMode) {\n  middlewares.push(reduxLogger.createLogger())\n}\n\nlet enhancer = applyMiddleware(...middlewares)\n\nif (isDevMode) {\n  enhancer = composeWithDevTools(enhancer)\n}\n\nexport default enhancer(createStore)(reducers)\n","import { ETicketsSortBy } from '../store/findTickets/types'\n\nconst findTickets = {\n  tabs: {\n    [ETicketsSortBy.price]: 'Самый дешевый',\n    [ETicketsSortBy.duration]: 'Самый быстрый',\n  },\n\n  transfers: {\n    title: 'Количество пересадок',\n    all: 'Все',\n    labelZero: 'Без пересадок',\n    label_0: '{{count}} пересадка',\n    label_1: '{{count}} пересадки',\n    label_2: '{{count}} пересадок',\n  },\n}\n\nconst labels = {\n  time: {\n    daysShort: 'д',\n    hoursShort: 'ч',\n    minutesShort: 'м',\n  },\n\n  reload: 'перезагрузить',\n}\n\nconst commonMessages = {\n  error: 'Что то пошло не так',\n}\n\nconst tickets = {\n  duration: 'В пути',\n  notFound: 'По выбранным критериям нет билетов, попробуйте изменить поиск ✈️',\n}\n\nexport default {\n  findTickets,\n  tickets,\n  labels,\n  commonMessages,\n}\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport ruTranslation from '../translations/ru-RU'\n\nclass TranslationService {\n  init(locale: string) {\n    i18n\n      .use(initReactI18next) // passes i18n down to react-i18next\n      .init({\n        resources: {\n          'ru-RU': {\n            translation: ruTranslation\n          },\n        },\n        lng: locale,\n        fallbackLng: 'ru-RU',\n\n        interpolation: {\n          escapeValue: false\n        }\n      })\n  }\n}\n\nexport default new TranslationService()\n","import 'moment/locale/ru'\nimport moment from 'moment'\n\nclass MomentService {\n  setLocale(locale?: string) {\n    moment.locale(locale)\n  }\n}\n\nexport default new MomentService()\n","import { IState } from './rootReducer'\nimport translationService from '../services/translation'\nimport momentService from '../services/moment'\nimport { getLocale } from './common/selectors'\n\nconst initLocale = (state: IState) => {\n  const locale = getLocale(state)\n  translationService.init(getLocale(state))\n  momentService.setLocale(locale)\n}\n\nconst init = (state: IState) => {\n  initLocale(state)\n}\n\nexport default init\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport './styles/index.scss'\nimport App from './App'\nimport store from './store'\nimport init from './store/initialize'\nimport * as serviceWorker from './serviceWorker'\n\nconst\n  render = () => {\n    ReactDOM.render(\n      <Provider store={store}>\n        <App/>\n      </Provider>,\n      document.getElementById('root'))\n  }\n\ninit(store.getState())\nstore.subscribe(render)\n\nrender()\n\nserviceWorker.unregister()\n"],"sourceRoot":""}